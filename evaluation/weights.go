package evaluation

import (
	. "github.com/mhib/combusken/backend"
	. "github.com/mhib/combusken/utils"
)

var PawnValue = S(78, 165)
var KnightValue = S(406, 560)
var BishopValue = S(384, 545)
var RookValue = S(527, 934)
var QueenValue = S(1218, 1771)

// Pawns Square scores
// Bishop Flag, Rank, Row
var PawnScores = [16][7][8]Score{
	{
		{},
		{S(-14, 17), S(-8, 7), S(-18, 14), S(-6, 16), S(-19, 25), S(16, 23), S(31, 15), S(-9, 18)},
		{S(-14, 9), S(-14, 7), S(-14, 5), S(-3, 3), S(1, 1), S(1, 12), S(9, 14), S(-15, 17)},
		{S(-15, 20), S(-19, 16), S(2, 0), S(9, -9), S(18, -12), S(18, 4), S(3, 24), S(-14, 28)},
		{S(-8, 32), S(0, 18), S(-3, 4), S(11, -12), S(28, -12), S(29, 6), S(31, 23), S(-1, 34)},
		{S(1, 56), S(12, 37), S(22, 29), S(47, -5), S(65, -14), S(67, 23), S(66, 37), S(7, 60)},
		{S(10, -1), S(-21, 30), S(2, 25), S(17, -1), S(-19, 6), S(-17, 21), S(-125, 63), S(-142, 53)},
	},
	{
		{},
		{S(-12, 25), S(-6, 6), S(-19, 9), S(8, 16), S(-18, 18), S(27, 17), S(26, 0), S(-9, 13)},
		{S(-9, 10), S(-17, 1), S(-3, 5), S(0, -5), S(10, 10), S(-2, -2), S(16, 12), S(-20, 10)},
		{S(-7, 18), S(-10, 11), S(4, -7), S(28, -6), S(24, -18), S(29, 0), S(3, 13), S(-12, 14)},
		{S(3, 31), S(15, 3), S(15, 4), S(21, -23), S(41, -11), S(42, -12), S(28, 15), S(-12, 31)},
		{S(-14, 82), S(34, 23), S(24, 26), S(67, -20), S(60, -16), S(102, -11), S(39, 26), S(-3, 49)},
		{S(-22, 66), S(10, 5), S(28, 6), S(16, -8), S(57, -11), S(16, -25), S(-83, 33), S(-108, 27)},
	},
	{
		{},
		{S(-18, 15), S(-12, 14), S(-15, 22), S(-16, 3), S(5, 27), S(10, 9), S(46, 5), S(-8, 19)},
		{S(-21, 9), S(-21, 9), S(-12, -2), S(0, 9), S(6, -13), S(6, 15), S(2, -3), S(-17, 19)},
		{S(-13, 6), S(-10, 9), S(8, 4), S(18, -15), S(39, -13), S(22, -7), S(7, 14), S(-13, 22)},
		{S(-9, 23), S(2, 14), S(0, 1), S(27, -8), S(35, -15), S(54, -3), S(21, 12), S(-6, 32)},
		{S(0, 46), S(8, 38), S(63, -8), S(44, -11), S(96, -29), S(68, 20), S(25, 26), S(6, 65)},
		{S(-32, 19), S(-18, 42), S(12, -21), S(21, 6), S(27, -29), S(30, -22), S(-91, 27), S(-101, 29)},
	},
	{
		{},
		{S(-18, 6), S(-11, -4), S(-4, -6), S(4, -18), S(8, -1), S(13, -1), S(42, -10), S(-1, -17)},
		{S(-11, -4), S(-27, -5), S(-1, -8), S(-1, -11), S(10, -7), S(-5, -3), S(7, -13), S(-8, -22)},
		{S(-3, -9), S(-6, -12), S(12, -23), S(33, -19), S(32, -16), S(23, -11), S(23, -24), S(3, -26)},
		{S(-17, 18), S(1, -4), S(33, -45), S(20, -15), S(41, -41), S(42, -24), S(18, 4), S(-5, -12)},
		{S(-26, 75), S(13, 16), S(41, -25), S(24, 1), S(83, -32), S(40, 7), S(38, 13), S(-16, 31)},
		{S(-15, 33), S(-28, 33), S(-27, 9), S(17, -36), S(52, 0), S(44, -8), S(-91, 32), S(-120, 71)},
	},
	{
		{},
		{S(-19, 19), S(-11, 17), S(-6, 6), S(-3, 14), S(-21, 21), S(7, 20), S(34, 10), S(-10, 17)},
		{S(-16, 9), S(-20, 4), S(-7, -16), S(3, -6), S(-6, -11), S(-5, 13), S(3, 3), S(-16, 20)},
		{S(-17, 26), S(-6, 9), S(10, -8), S(13, -30), S(31, -29), S(11, -9), S(5, 21), S(-15, 31)},
		{S(-6, 48), S(11, 17), S(4, -11), S(24, -15), S(33, -38), S(33, 6), S(28, 12), S(-11, 48)},
		{S(-24, 88), S(5, 43), S(8, 32), S(63, -21), S(71, -16), S(81, -6), S(56, 40), S(4, 71)},
		{S(37, 40), S(-27, 43), S(5, 25), S(42, 18), S(73, -36), S(52, 17), S(-78, 61), S(-125, 98)},
	},
	{
		{},
		{S(-4, 30), S(1, 17), S(-9, 21), S(-2, 20), S(-10, 24), S(17, 31), S(27, 8), S(-3, 15)},
		{S(-4, 18), S(-9, 4), S(0, 9), S(6, -3), S(7, 9), S(-1, 8), S(7, 19), S(-11, 14)},
		{S(-4, 32), S(4, 16), S(15, -4), S(28, -8), S(35, -15), S(22, 8), S(7, 23), S(-9, 25)},
		{S(12, 43), S(17, 14), S(8, 13), S(34, -14), S(46, -18), S(44, -6), S(34, 28), S(-8, 43)},
		{S(-7, 98), S(30, 43), S(37, 35), S(66, -18), S(76, -20), S(81, 6), S(28, 47), S(-3, 73)},
		{S(16, 69), S(-37, 21), S(12, 41), S(51, 18), S(22, -2), S(51, 31), S(-52, 21), S(-132, 47)},
	},
	{
		{},
		{S(-4, -18), S(1, -12), S(-5, -8), S(4, -26), S(3, 4), S(8, -18), S(44, 0), S(-1, -10)},
		{S(-5, -19), S(-8, -13), S(-10, -32), S(3, -13), S(-5, -33), S(5, -5), S(-6, -23), S(-7, -2)},
		{S(-4, -11), S(8, -32), S(17, -21), S(14, -57), S(36, -32), S(10, -31), S(14, -4), S(-8, 7)},
		{S(7, -4), S(10, -1), S(10, -41), S(22, -19), S(36, -62), S(70, -27), S(28, -21), S(16, 7)},
		{S(-6, 23), S(45, -8), S(23, -8), S(46, -33), S(80, -54), S(94, -50), S(85, -16), S(46, 11)},
		{S(87, -84), S(5, 23), S(19, -83), S(27, -11), S(76, -106), S(21, 3), S(-36, -120), S(-111, 21)},
	},
	{
		{},
		{S(-6, 4), S(-4, 15), S(-6, 8), S(-1, 5), S(1, 19), S(9, 16), S(31, 17), S(-4, 11)},
		{S(-7, 2), S(-17, 7), S(-6, 0), S(2, 6), S(3, -5), S(-8, 27), S(0, 2), S(-10, -3)},
		{S(-4, 7), S(-4, 5), S(16, -9), S(27, -22), S(32, -6), S(10, 8), S(5, 11), S(-11, 16)},
		{S(7, 27), S(15, 16), S(7, 6), S(27, -4), S(39, -25), S(47, -7), S(15, 13), S(-12, 21)},
		{S(-5, 56), S(25, 30), S(15, 23), S(44, 14), S(84, -33), S(85, 17), S(21, -10), S(-4, 78)},
		{S(12, -6), S(-41, 20), S(-21, -2), S(58, -8), S(-26, -55), S(33, -39), S(-64, 39), S(-135, 18)},
	},
	{
		{},
		{S(-14, 22), S(-5, 7), S(-14, 14), S(-7, 6), S(-13, 14), S(13, 14), S(21, 10), S(-10, 18)},
		{S(-11, 10), S(-14, 0), S(-8, -2), S(-1, -14), S(1, -6), S(-15, 3), S(7, 12), S(-16, 14)},
		{S(-10, 27), S(-8, 19), S(1, -15), S(19, -27), S(22, -35), S(13, 0), S(-5, 18), S(-16, 27)},
		{S(-1, 54), S(10, 11), S(-2, 3), S(12, -33), S(35, -13), S(21, -16), S(22, 21), S(-17, 41)},
		{S(12, 74), S(10, 45), S(63, 5), S(45, -19), S(67, -20), S(84, 14), S(97, 21), S(-7, 62)},
		{S(-32, 58), S(-12, 36), S(44, 17), S(44, -19), S(38, 22), S(42, -16), S(-86, 21), S(-123, 61)},
	},
	{
		{},
		{S(6, -3), S(8, -22), S(-7, -8), S(26, -4), S(-6, -9), S(36, 1), S(31, -23), S(9, -14)},
		{S(3, -11), S(-1, -31), S(15, -21), S(7, -31), S(21, -9), S(-5, -18), S(23, -4), S(0, -22)},
		{S(5, 7), S(2, -15), S(17, -48), S(39, -28), S(33, -57), S(42, -18), S(12, -17), S(2, -6)},
		{S(20, 12), S(29, -31), S(19, -23), S(22, -67), S(56, -39), S(39, -46), S(35, 0), S(5, -3)},
		{S(40, 31), S(20, 3), S(57, -20), S(74, -42), S(83, -53), S(136, -47), S(68, -19), S(28, 6)},
		{S(1, 20), S(36, -71), S(7, 46), S(53, -80), S(17, -31), S(65, -119), S(-100, -9), S(-117, -71)},
	},
	{
		{},
		{S(-8, 27), S(-1, 17), S(-8, 31), S(-8, 20), S(-13, 35), S(14, 16), S(29, 19), S(-4, 12)},
		{S(-9, 20), S(-8, 13), S(-6, 12), S(5, 7), S(2, -6), S(-2, 18), S(6, 11), S(-12, 12)},
		{S(-3, 24), S(0, 22), S(14, 4), S(19, -4), S(32, -8), S(24, 2), S(10, 19), S(-11, 24)},
		{S(0, 47), S(17, 24), S(9, 10), S(24, -9), S(39, -15), S(46, -4), S(26, 17), S(-5, 39)},
		{S(7, 76), S(14, 67), S(45, 11), S(34, 9), S(91, -22), S(75, 29), S(91, 7), S(2, 67)},
		{S(-13, 47), S(-11, 67), S(-13, 15), S(27, 19), S(80, -15), S(66, -50), S(-89, 25), S(-156, 75)},
	},
	{
		{},
		{S(-9, 22), S(0, 10), S(-6, 15), S(8, 18), S(-12, 28), S(19, 15), S(28, -2), S(-2, 2)},
		{S(-7, 9), S(-13, 7), S(-3, 19), S(3, -1), S(7, 10), S(-6, 4), S(10, 2), S(-11, 2)},
		{S(-1, 22), S(4, 6), S(14, -10), S(29, 3), S(33, -23), S(28, 3), S(7, 3), S(-13, 11)},
		{S(12, 23), S(18, 22), S(11, 18), S(29, -43), S(39, -18), S(47, -26), S(17, 21), S(-19, 39)},
		{S(0, 80), S(23, 54), S(34, 8), S(44, -17), S(62, -11), S(88, -13), S(40, 42), S(1, 34)},
		{S(-16, -8), S(3, 27), S(9, 5), S(21, 5), S(34, -7), S(37, 0), S(-88, 35), S(-117, 35)},
	},
	{
		{},
		{S(-26, 25), S(-16, 18), S(-6, 1), S(-5, 4), S(-24, -12), S(3, 6), S(20, -6), S(0, -9)},
		{S(-21, 23), S(-26, 11), S(-24, 2), S(-4, -10), S(2, -29), S(-4, -12), S(1, -4), S(-5, -3)},
		{S(-15, 34), S(-15, 19), S(4, -25), S(8, -36), S(24, -60), S(22, -29), S(-9, 17), S(-4, 10)},
		{S(-9, 39), S(1, 30), S(-1, 10), S(20, -31), S(27, -26), S(41, -50), S(19, 18), S(4, 38)},
		{S(-23, 131), S(-2, 74), S(4, 47), S(48, 15), S(63, -2), S(84, 2), S(70, 31), S(-18, 106)},
		{S(-15, 49), S(-13, 39), S(-16, 36), S(-1, -8), S(15, -9), S(30, -45), S(-52, 33), S(-93, 78)},
	},
	{
		{},
		{S(-9, 32), S(0, 13), S(-10, 13), S(-1, 9), S(-15, 13), S(14, 28), S(15, 2), S(-2, 2)},
		{S(-8, 22), S(-17, 2), S(1, 6), S(5, -27), S(5, 4), S(-4, -6), S(4, 8), S(-11, -3)},
		{S(-3, 35), S(-2, 17), S(14, -21), S(25, -9), S(32, -41), S(22, 1), S(6, 3), S(-6, 5)},
		{S(11, 54), S(13, 12), S(14, 11), S(30, -49), S(46, -14), S(32, -26), S(33, 21), S(-6, 35)},
		{S(9, 88), S(26, 75), S(29, 40), S(40, 16), S(36, 33), S(88, -14), S(35, 35), S(4, 66)},
		{S(11, 99), S(-29, 48), S(-3, 30), S(33, -15), S(30, -5), S(-11, -50), S(-120, -9), S(-106, 83)},
	},
	{
		{},
		{S(-17, 24), S(-6, 13), S(-8, 24), S(-2, 4), S(-21, 27), S(0, 6), S(20, 23), S(-8, 17)},
		{S(-14, 9), S(-12, 9), S(-6, -21), S(2, -1), S(-8, -17), S(-7, 10), S(-2, -4), S(-13, 16)},
		{S(-12, 27), S(-5, 14), S(13, -1), S(15, -37), S(32, -20), S(12, -15), S(6, 7), S(-15, 19)},
		{S(-6, 50), S(19, 27), S(1, -4), S(23, -2), S(34, -44), S(51, -22), S(23, -3), S(-7, 44)},
		{S(-1, 110), S(16, 45), S(47, 32), S(28, 6), S(90, -17), S(60, 12), S(47, 31), S(6, 61)},
		{S(-13, 14), S(-17, 76), S(-51, 28), S(10, 26), S(8, -24), S(28, 10), S(-76, 21), S(-134, 64)},
	},
	{
		{},
		{S(-13, 26), S(-4, 30), S(-14, 31), S(-7, 16), S(-18, 19), S(4, 32), S(13, 20), S(-11, 18)},
		{S(-11, 21), S(-16, 18), S(-7, 19), S(-3, 11), S(-2, 11), S(-14, 35), S(-8, 19), S(-20, 16)},
		{S(-5, 27), S(-4, 26), S(11, 8), S(18, 5), S(26, -10), S(13, 13), S(-2, 24), S(-20, 26)},
		{S(5, 55), S(17, 26), S(2, 33), S(24, -15), S(33, -5), S(37, -7), S(15, 27), S(-15, 41)},
		{S(4, 97), S(16, 71), S(16, 75), S(43, 9), S(58, -15), S(60, -1), S(28, 27), S(-10, 70)},
		{S(-90, 110), S(-74, 21), S(-36, 47), S(5, 1), S(15, -41), S(32, 3), S(-60, 16), S(-162, 25)},
	},
}

// Piece Square Values
var PieceScores = [King + 1][8][8]Score{
	{},
	{ // knight
		{S(-78, -88), S(-24, -44), S(-40, -32), S(-24, -5), S(-25, -10), S(-26, -30), S(-29, -31), S(-83, -43)},
		{S(-29, -32), S(-18, -23), S(-18, -37), S(-18, -10), S(-24, -11), S(-17, -31), S(-26, -15), S(-22, -21)},
		{S(-13, -45), S(-8, -20), S(-11, -12), S(-4, 10), S(-4, 8), S(-17, -10), S(-8, -21), S(-22, -46)},
		{S(-9, -7), S(-8, 5), S(6, 22), S(-3, 34), S(8, 32), S(1, 26), S(18, 0), S(-11, 1)},
		{S(-2, 8), S(-4, 7), S(7, 34), S(10, 52), S(8, 45), S(24, 32), S(6, 10), S(8, 9)},
		{S(-51, 6), S(-25, 14), S(-6, 42), S(5, 43), S(25, 32), S(21, 37), S(-15, 10), S(-21, -1)},
		{S(-2, -24), S(-14, -5), S(22, -19), S(29, 18), S(34, 10), S(58, -38), S(-24, -7), S(12, -35)},
		{S(-204, -54), S(-98, -10), S(-154, 26), S(-30, -7), S(8, -9), S(-128, 31), S(-75, -11), S(-190, -72)},
	},
	{ // Bishop
		{S(29, -40), S(49, -13), S(5, 1), S(14, 2), S(-1, 11), S(16, -8), S(14, -12), S(22, -41)},
		{S(44, -37), S(20, -37), S(40, -9), S(7, 5), S(17, 0), S(17, -13), S(31, -41), S(21, -63)},
		{S(20, -8), S(49, -2), S(8, -7), S(33, 12), S(16, 21), S(15, -14), S(28, 0), S(33, -9)},
		{S(16, -6), S(22, 8), S(32, 16), S(22, 27), S(41, 23), S(16, 20), S(27, 5), S(12, -6)},
		{S(-8, 17), S(30, 15), S(2, 32), S(41, 35), S(22, 37), S(27, 24), S(19, 14), S(2, 19)},
		{S(3, 12), S(-10, 34), S(14, 6), S(9, 36), S(28, 34), S(-6, 22), S(8, 33), S(-9, 22)},
		{S(-30, 32), S(-7, 7), S(12, 27), S(-13, 38), S(-8, 40), S(14, 29), S(-22, 8), S(-29, 32)},
		{S(-23, -2), S(-64, 41), S(-126, 51), S(-106, 60), S(-106, 55), S(-100, 47), S(23, 17), S(-41, 1)},
	},
	{ // Rook
		{S(-23, -29), S(-18, -19), S(-11, -18), S(-2, -26), S(-4, -28), S(-5, -19), S(-4, -26), S(-13, -46)},
		{S(-56, -26), S(-22, -35), S(-21, -27), S(-17, -31), S(-17, -33), S(-3, -39), S(2, -48), S(-55, -20)},
		{S(-43, -19), S(-28, -4), S(-34, -5), S(-19, -16), S(-22, -14), S(-18, -9), S(6, -16), S(-27, -21)},
		{S(-36, 7), S(-34, 23), S(-30, 24), S(-16, 12), S(-20, 10), S(-19, 16), S(-8, 13), S(-18, 3)},
		{S(-31, 33), S(-6, 31), S(1, 33), S(28, 22), S(11, 22), S(20, 22), S(15, 16), S(0, 22)},
		{S(-33, 44), S(19, 27), S(13, 39), S(36, 20), S(40, 20), S(62, 30), S(82, 1), S(6, 31)},
		{S(-26, 54), S(-19, 57), S(7, 50), S(30, 50), S(16, 54), S(66, 19), S(15, 35), S(27, 31)},
		{S(17, 42), S(28, 47), S(0, 57), S(10, 50), S(11, 49), S(60, 43), S(78, 37), S(62, 42)},
	},
	{ // Queen
		{S(8, -106), S(1, -81), S(4, -82), S(8, -51), S(9, -80), S(-12, -77), S(5, -121), S(6, -111)},
		{S(-3, -80), S(6, -62), S(11, -82), S(3, -43), S(3, -48), S(17, -97), S(23, -103), S(17, -92)},
		{S(-10, -58), S(5, -31), S(1, -4), S(-6, -11), S(-5, -14), S(-1, 2), S(17, -36), S(9, -54)},
		{S(-11, -45), S(-6, 5), S(-11, 12), S(-21, 66), S(-20, 53), S(6, 39), S(9, 9), S(14, 9)},
		{S(-27, -19), S(-18, 20), S(-30, 23), S(-26, 77), S(-29, 99), S(-2, 90), S(20, 73), S(16, 49)},
		{S(-46, -2), S(-28, -3), S(-31, 21), S(-10, 40), S(6, 72), S(46, 71), S(54, 55), S(25, 79)},
		{S(-43, 18), S(-78, 45), S(-28, 24), S(-58, 75), S(-34, 108), S(23, 81), S(-36, 80), S(14, 30)},
		{S(-42, 25), S(-9, 12), S(-13, 47), S(10, 43), S(15, 60), S(60, 49), S(88, 19), S(59, 9)},
	},
	{ // King
		{S(144, -10), S(130, 26), S(57, 64), S(56, 66), S(78, 54), S(59, 59), S(150, 19), S(164, -30)},
		{S(153, 36), S(100, 58), S(39, 90), S(39, 111), S(37, 118), S(55, 89), S(131, 47), S(157, 34)},
		{S(114, 27), S(149, 43), S(88, 81), S(88, 121), S(69, 128), S(101, 82), S(133, 48), S(108, 37)},
		{S(142, 11), S(265, 29), S(157, 89), S(84, 139), S(86, 141), S(145, 91), S(220, 43), S(92, 29)},
		{S(132, 48), S(324, 43), S(157, 105), S(110, 137), S(87, 143), S(193, 100), S(267, 51), S(99, 51)},
		{S(140, 47), S(324, 62), S(224, 103), S(173, 111), S(175, 119), S(253, 93), S(301, 63), S(134, 43)},
		{S(136, -4), S(222, 61), S(212, 76), S(177, 90), S(127, 97), S(174, 78), S(203, 69), S(125, -2)},
		{S(180, -123), S(312, -40), S(201, 1), S(173, 54), S(154, 53), S(167, 11), S(287, -26), S(145, -100)},
	},
}

var PawnsConnected = [7][4]Score{
	{S(0, 0), S(0, 0), S(0, 0), S(0, 0)},
	{S(-1, -15), S(7, 3), S(2, -2), S(12, 14)},
	{S(10, 4), S(20, 2), S(21, 9), S(23, 14)},
	{S(9, 5), S(20, 9), S(11, 12), S(15, 20)},
	{S(4, 18), S(17, 26), S(28, 30), S(25, 24)},
	{S(36, 32), S(23, 73), S(64, 77), S(72, 93)},
	{S(176, 38), S(280, 22), S(275, 56), S(316, 56)},
}

var MobilityBonus = [...][32]Score{
	{S(-60, -124), S(-44, -67), S(-31, -20), S(-22, 2), S(-16, 16), S(-11, 31), // Knights
		S(-3, 34), S(5, 30), S(15, 15)},
	{S(2, -125), S(9, -57), S(16, -16), S(23, 5), S(29, 19), S(34, 34), // Bishops
		S(35, 42), S(36, 47), S(35, 49), S(39, 49), S(42, 43), S(52, 34),
		S(71, 34), S(78, 7)},
	{S(-110, -156), S(-14, -26), S(-4, 25), S(-4, 50), S(-2, 60), S(0, 73), // Rooks
		S(2, 83), S(4, 90), S(9, 95), S(12, 100), S(15, 108), S(15, 114),
		S(21, 115), S(36, 101), S(96, 56)},
	{S(-413, -159), S(-130, -143), S(-45, -178), S(-22, -116), S(-8, -82), S(-8, -12), // Queens
		S(-5, 16), S(-2, 35), S(1, 51), S(4, 63), S(7, 72), S(10, 74),
		S(12, 77), S(13, 82), S(17, 77), S(14, 82), S(14, 78), S(12, 78),
		S(16, 67), S(22, 54), S(34, 32), S(37, 14), S(40, -3), S(52, -40),
		S(24, -28), S(-60, -9), S(140, -118), S(56, -79)},
}

var PassedFriendlyDistance = [8]Score{
	S(0, 0), S(-1, 36), S(-7, 21), S(-5, 6),
	S(-3, -8), S(-2, -17), S(8, -29), S(10, -40),
}

var PassedEnemyDistance = [8]Score{
	S(0, 0), S(-82, -46), S(-2, -14), S(2, 5),
	S(7, 17), S(10, 24), S(11, 31), S(14, 38),
}

// PassedRank[Rank] contains a bonus according to the rank of a passed pawn, whether it can be pushed and whether the push would be safe
var PassedRank = [2][2][2][7]Score{
	{
		{
			{S(0, 0), S(-45, -25), S(-35, 8), S(-23, 13), S(30, 13), S(45, 16), S(172, 88)},
			{S(0, 0), S(-30, -56), S(-28, -22), S(-18, 3), S(29, 23), S(58, 35), S(161, 126)},
		},
		{
			{S(0, 0), S(-17, -29), S(-23, -1), S(-16, 19), S(13, 47), S(55, 82), S(249, 141)},
			{S(0, 0), S(-9, -55), S(-23, -7), S(-18, 23), S(14, 58), S(74, 86), S(222, 175)},
		},
	},
	{
		{
			{S(0, 0), S(-18, -9), S(-26, -4), S(-9, 21), S(29, 48), S(62, 98), S(275, 180)},
			{S(0, 0), S(-14, -23), S(-19, -4), S(-8, 36), S(34, 65), S(71, 107), S(231, 225)},
		},
		{
			{S(0, 0), S(-27, -14), S(-23, -13), S(-9, 30), S(22, 84), S(32, 232), S(76, 411)},
			{S(0, 0), S(-14, -34), S(-15, -16), S(-7, 32), S(23, 90), S(55, 219), S(136, 424)},
		},
	},
}

// PassedFile[File] contains a bonus according to the file of a passed pawn
var PassedFile = [8]Score{S(-2, 22), S(-1, 25), S(0, 10), S(-2, -4),
	S(-8, 2), S(-18, 10), S(-16, 22), S(1, 8),
}

var PassedStacked = [7]Score{S(0, 0), S(-21, -62), S(-31, -45), S(-47, -59), S(-27, -60), S(41, -104), S(0, 0)}
var PassedUncontested = [6]Score{S(0, 0), S(-84, 46), S(-72, 43), S(-80, 46), S(-77, 50), S(-66, 38)}
var PassedPushDefended = [6]Score{S(0, 0), S(-5, 19), S(-1, 6), S(5, -1), S(-3, 4), S(-18, 16)}
var PassedPushUncontestedDefended = [6]Score{S(0, 0), S(-57, 34), S(-36, 25), S(-63, 49), S(-71, 60), S(-58, 74)}

var Isolated = S(-5, -15)

// Is doubled, can be traded
var StackedPawns = [2][2][8]Score{
	{
		{S(-14, -40), S(-13, -28), S(-1, -25), S(-7, -22), S(-9, -21), S(-4, -26), S(0, -30), S(8, -39)},
		{S(-19, -41), S(-13, -24), S(-4, -18), S(-16, -23), S(-14, -16), S(-9, -26), S(-8, -31), S(3, -45)},
	},
	{
		{S(-19, -46), S(-15, -31), S(-13, -38), S(-23, -41), S(-16, -34), S(-1, -37), S(-7, -37), S(-11, -51)},
		{S(-24, -50), S(-7, -38), S(-21, -36), S(-22, -33), S(-19, -36), S(-8, -45), S(1, -45), S(-17, -54)},
	},
}
var AttackedBySafePawn = [5]Score{
	S(40, 73),
	S(40, 82),
	S(35, 33),
	S(37, 22),
	S(36, 35),
}

var Backward = S(7, -3)
var BackwardOpen = S(-4, -21)

var BishopPair = S(13, 80)
var BishopRammedPawns = S(-7, -23)

var BishopOutpostUndefendedBonus = S(18, -5)
var BishopOutpostDefendedBonus = S(47, 12)

var LongDiagonalBishop = S(20, 26)
var DistantBishop = [4]Score{S(-6, 2), S(-11, 0), S(-14, -1), S(-14, -20)}

var KnightOutpostUndefendedBonus = S(18, -24)
var KnightOutpostDefendedBonus = S(41, 13)

var DistantKnight = [4]Score{S(-14, -1), S(-16, -11), S(-27, -12), S(-49, -19)}

var MinorBehindPawn = S(7, 29)

var Tempo int16 = 15

// Rook on semiopen, open file
var RookOnFile = [2]Score{S(12, 13), S(36, 4)}
var RookOnQueenFile = S(5, 23)
var TrappedRook = S(-31, -1)

var KingDefenders = [12]Score{
	S(-27, -13), S(-9, -9), S(0, -6), S(4, -4),
	S(7, -2), S(10, 4), S(14, 8), S(18, 8),
	S(18, 13), S(16, -62), S(-16, -12), S(11, 0),
}

var KingShelter = [2][8][8]Score{
	{{S(-24, 11), S(8, -13), S(18, 1), S(21, 4),
		S(24, -16), S(20, -8), S(16, -42), S(-86, 40)},
		{S(18, 8), S(23, -6), S(-5, 11), S(-8, 7),
			S(1, -2), S(20, 0), S(41, -18), S(-41, 23)},
		{S(16, 4), S(6, -1), S(-27, -1), S(-23, -3),
			S(-4, -19), S(1, 1), S(20, -12), S(-27, 1)},
		{S(-14, 17), S(13, -2), S(-4, -9), S(-5, -7),
			S(4, -24), S(-5, -9), S(14, 21), S(-12, -2)},
		{S(-32, 19), S(-14, 6), S(-32, 6), S(-24, 8),
			S(1, -8), S(-19, 2), S(12, -2), S(-22, 2)},
		{S(39, -17), S(23, -15), S(3, -12), S(4, -22),
			S(12, -27), S(23, -19), S(31, -18), S(-8, -2)},
		{S(16, -1), S(-4, -8), S(-29, 1), S(-21, 2),
			S(-4, -16), S(7, -5), S(15, -16), S(-25, 21)},
		{S(-43, 10), S(-27, -1), S(-20, 25), S(-22, 22),
			S(-22, 14), S(-12, 12), S(-11, -13), S(-67, 48)}},
	{{S(34, 56), S(-36, -13), S(-25, 4), S(-31, -7),
		S(-40, -15), S(-5, 5), S(-41, -17), S(-87, 40)},
		{S(137, 17), S(8, -4), S(-5, 6), S(-24, 18),
			S(-8, -13), S(10, 0), S(15, -3), S(-76, 27)},
		{S(-4, 33), S(35, 5), S(9, -1), S(16, -7),
			S(22, -8), S(13, 4), S(38, 5), S(-21, 7)},
		{S(5, 33), S(-12, 21), S(-14, 14), S(-22, 22),
			S(-3, 8), S(-6, 3), S(-5, 11), S(-42, -2)},
		{S(4, 23), S(-6, 9), S(-9, 4), S(-11, -2),
			S(-7, -1), S(2, -5), S(14, 2), S(-26, -4)},
		{S(17, 21), S(-4, 7), S(-17, 8), S(-14, 5),
			S(-4, 0), S(-34, 14), S(-3, 4), S(-34, 9)},
		{S(30, 6), S(-4, -16), S(-11, -14), S(-29, -9),
			S(-12, -16), S(0, -14), S(3, -17), S(-66, 21)},
		{S(-27, -3), S(-13, -31), S(-11, -18), S(-6, -25),
			S(-6, -36), S(0, -22), S(-3, -48), S(-67, 27)}},
}

var KingStorm = [2][4][8]Score{
	{{S(10, 9), S(2, 16), S(8, 7), S(5, 8),
		S(5, 5), S(12, 1), S(7, 10), S(-8, -5)},
		{S(26, 1), S(16, 7), S(19, 3), S(6, 9),
			S(19, 1), S(26, -9), S(19, -6), S(-4, -4)},
		{S(23, 10), S(6, 7), S(5, 10), S(-3, 10),
			S(0, 8), S(7, 3), S(8, -5), S(0, 5)},
		{S(7, 0), S(4, -2), S(8, -9), S(-1, -11),
			S(-2, -4), S(15, -14), S(8, -12), S(-9, 4)}},
	{{S(0, 0), S(3, 2), S(-13, 5), S(13, -8),
		S(1, 19), S(-15, 29), S(3, 51), S(-7, -4)},
		{S(0, 0), S(-53, -10), S(6, -9), S(43, -9),
			S(4, -2), S(-13, -8), S(12, 53), S(-6, -2)},
		{S(0, 0), S(-20, -13), S(-7, -9), S(12, -3),
			S(4, -6), S(-13, -18), S(29, -40), S(-3, 4)},
		{S(0, 0), S(-19, -29), S(-12, -27), S(-5, -13),
			S(1, -25), S(4, -53), S(5, -2), S(-12, -4)}},
}
var KingOnPawnlessFlank = S(-15, -69)

var Hanging = S(27, 13)
var ThreatByKing = S(-6, 35)
var ThreatByMinor = [King + 1]Score{S(0, 0), S(19, 41), S(17, 39), S(31, 30), S(30, 30), S(1, 29)}
var ThreatByRook = [King + 1]Score{S(0, 0), S(-2, 14), S(-1, 18), S(-4, -11), S(34, 9), S(13, 9)}

// This weights are from black piece on black square perspective
var RookBishopExistence = [16]Score{
	S(12, -7), S(1, -9), S(2, -9), S(1, 0), S(-1, -5), S(-6, 37), S(-3, 0), S(-6, 20), S(1, -6), S(-3, -2), S(-6, 37), S(-6, 21), S(-8, -19), S(-3, 18), S(-2, 18), S(-19, 56),
}
var QueenBishopExistence = [16]Score{
	S(85, -47), S(-5, -8), S(-3, -22), S(-27, -11), S(-4, -7), S(10, 78), S(-20, 0), S(-2, -4), S(0, -1), S(-16, 25), S(12, 74), S(1, 5), S(-38, -12), S(-8, 38), S(-12, 31), S(-18, 34),
}
var KingBishopExistence = [16]Score{
	S(0, 0), S(-4, 6), S(-3, 7), S(-21, -5), S(3, -12), S(-2, -6), S(-2, -3), S(-2, 7), S(5, -4), S(2, 3), S(2, 6), S(1, 15), S(21, 5), S(2, -14), S(3, -11), S(0, 0),
}

//
// King safety
//

var KingSafetyAttacksWeights = [Queen + 1]Score{S(0, 47), S(-3, -19), S(-6, 40), S(-2, -28), S(-1, 49)}
var KingSafetyWeakSquares = S(40, 26)
var KingSafetyFriendlyPawns = S(-26, -4)
var KingSafetyNoEnemyQueens = S(-164, -175)
var KingSafetySafeQueenCheck = S(86, 99)
var KingSafetySafeRookCheck = S(75, 85)
var KingSafetySafeBishopCheck = S(45, 50)
var KingSafetySafeKnightCheck = S(111, 104)
var KingSafetyAdjustment = S(-22, -3)

// Attack value is special as it is scaled by a fraction
var KingSafetyAttackValue = S(111, 139)

//
// Complexity
//

var ComplexityTotalPawns = S(0, 6)
var ComplexityPawnEndgame = S(0, 83)
var ComplexityPawnBothFlanks = S(0, 106)
var ComplexityInfiltration = S(0, 6)
var ComplexityAdjustment = S(0, -173)
