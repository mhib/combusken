package evaluation

import (
	. "github.com/mhib/combusken/backend"
)

var PawnValue = S(82, 152)
var KnightValue = S(414, 539)
var BishopValue = S(393, 536)
var RookValue = S(558, 883)
var QueenValue = S(1314, 1635)

// Pawns Square scores
// Bishop Flag, Rank, Row
var PawnScores = [16][7][8]Score{
	{
		{},
		{S(-27, 19), S(-19, 7), S(-27, 15), S(-15, 19), S(-27, 26), S(16, 14), S(39, 5), S(-8, 12)},
		{S(-24, 8), S(-25, 7), S(-24, 10), S(-15, 7), S(-6, 2), S(-1, 8), S(10, 6), S(-14, 10)},
		{S(-23, 18), S(-29, 18), S(-4, 6), S(0, -1), S(14, -8), S(17, 2), S(6, 15), S(-11, 18)},
		{S(-19, 32), S(-12, 22), S(-11, 11), S(-3, -2), S(29, -11), S(35, 2), S(37, 11), S(6, 24)},
		{S(-18, 69), S(-3, 53), S(5, 44), S(26, 12), S(55, -2), S(62, 20), S(58, 42), S(-4, 68)},
		{S(-8, 21), S(-11, 43), S(1, 44), S(19, 22), S(21, 12), S(25, 38), S(-96, 77), S(-132, 79)},
	},
	{
		{},
		{S(-15, 25), S(-10, 4), S(-21, 9), S(6, 18), S(-19, 19), S(28, 16), S(35, -4), S(-8, 11)},
		{S(-12, 8), S(-18, 1), S(-3, 8), S(-4, -2), S(11, 13), S(-4, -1), S(20, 11), S(-21, 11)},
		{S(-7, 17), S(-11, 11), S(6, -3), S(30, 0), S(26, -13), S(29, 5), S(5, 12), S(-9, 10)},
		{S(-1, 33), S(14, 0), S(14, 14), S(19, -22), S(46, -8), S(50, -11), S(36, 14), S(-7, 27)},
		{S(-8, 65), S(21, 50), S(28, 9), S(54, 11), S(64, -34), S(91, 6), S(47, 0), S(1, 62)},
		{S(1, 61), S(-4, -11), S(11, 18), S(23, -28), S(40, -3), S(26, -23), S(-88, 34), S(-128, 24)},
	},
	{
		{},
		{S(-16, 13), S(-12, 12), S(-12, 20), S(-20, 4), S(9, 30), S(13, 5), S(60, 0), S(-1, 18)},
		{S(-19, 7), S(-20, 8), S(-11, -1), S(1, 10), S(6, -10), S(8, 17), S(6, -3), S(-10, 17)},
		{S(-10, 2), S(-8, 10), S(11, 7), S(20, -10), S(44, -5), S(27, -4), S(17, 11), S(-5, 19)},
		{S(-7, 18), S(3, 15), S(4, -1), S(25, 1), S(43, -16), S(65, 3), S(32, 5), S(5, 32)},
		{S(-8, 62), S(16, 16), S(44, 26), S(42, -30), S(85, -1), S(84, 2), S(49, 28), S(16, 54)},
		{S(-14, -12), S(-3, 34), S(-2, -34), S(28, -1), S(31, -36), S(30, -8), S(-92, 20), S(-124, 53)},
	},
	{
		{},
		{S(-17, 6), S(-10, -6), S(-3, -3), S(-6, 3), S(1, 16), S(11, 7), S(47, 3), S(-5, -3)},
		{S(-10, -5), S(-24, -9), S(-2, -3), S(-1, -10), S(11, 2), S(-8, 6), S(8, -2), S(-12, -10)},
		{S(-2, -8), S(-8, -7), S(12, -19), S(36, -11), S(34, -8), S(24, 1), S(18, -7), S(-5, -7)},
		{S(-18, 15), S(2, -2), S(18, -15), S(22, -17), S(43, -29), S(43, -12), S(29, 7), S(-10, 6)},
		{S(-13, 62), S(13, 27), S(29, 11), S(38, -11), S(69, -21), S(76, 2), S(51, 17), S(-2, 46)},
		{S(-7, 15), S(-9, 11), S(0, 3), S(25, -17), S(34, -17), S(31, -9), S(-90, 30), S(-128, 46)},
	},
	{
		{},
		{S(-22, 16), S(-10, 15), S(-5, 7), S(-3, 14), S(-21, 22), S(9, 16), S(43, 5), S(-6, 14)},
		{S(-17, 4), S(-22, 3), S(-7, -15), S(3, -4), S(-9, -8), S(-2, 12), S(3, 2), S(-14, 16)},
		{S(-18, 22), S(-2, 10), S(12, -4), S(14, -26), S(34, -24), S(11, -5), S(11, 17), S(-13, 27)},
		{S(-6, 45), S(11, 16), S(4, -8), S(24, -10), S(36, -37), S(43, 9), S(34, 9), S(-2, 45)},
		{S(-19, 88), S(10, 43), S(20, 31), S(50, -25), S(71, -11), S(84, -7), S(60, 38), S(8, 71)},
		{S(9, 48), S(-6, 28), S(6, 11), S(34, 4), S(37, -27), S(35, -1), S(-86, 38), S(-121, 70)},
	},
	{
		{},
		{S(-3, 25), S(2, 13), S(-8, 18), S(-3, 18), S(-10, 23), S(15, 29), S(27, 6), S(0, 13)},
		{S(-5, 13), S(-11, 1), S(0, 9), S(4, -6), S(6, 11), S(-2, 9), S(4, 18), S(-11, 11)},
		{S(-2, 26), S(6, 16), S(18, -4), S(30, -6), S(37, -12), S(24, 10), S(7, 22), S(-8, 20)},
		{S(13, 42), S(19, 8), S(8, 19), S(34, -19), S(51, -18), S(50, -7), S(39, 26), S(-3, 35)},
		{S(-4, 84), S(24, 57), S(39, 19), S(54, 0), S(76, -42), S(84, 10), S(41, 17), S(4, 67)},
		{S(12, 52), S(-14, -6), S(10, 18), S(33, -6), S(33, -15), S(33, -6), S(-86, 30), S(-131, 40)},
	},
	{
		{},
		{S(-12, -12), S(-4, -6), S(-8, -2), S(-10, -8), S(-3, 15), S(-2, -10), S(48, 3), S(-4, -2)},
		{S(-11, -16), S(-15, -5), S(-18, -23), S(-5, -3), S(-15, -23), S(-1, 4), S(-15, -15), S(-11, 6)},
		{S(-12, -6), S(3, -24), S(12, -9), S(8, -46), S(31, -17), S(4, -17), S(13, 3), S(-12, 13)},
		{S(1, -3), S(2, 10), S(5, -35), S(15, -2), S(32, -54), S(66, -7), S(26, -17), S(14, 20)},
		{S(-23, 55), S(18, -7), S(23, 22), S(29, -47), S(72, -17), S(76, -37), S(58, 19), S(21, 20)},
		{S(-10, -40), S(-4, 19), S(-18, -57), S(29, -5), S(27, -62), S(31, -6), S(-100, -24), S(-126, 47)},
	},
	{
		{},
		{S(-5, 0), S(-3, 10), S(-3, 4), S(-6, 6), S(4, 21), S(6, 15), S(37, 11), S(-2, 12)},
		{S(-6, -4), S(-18, 0), S(-5, -2), S(1, 1), S(4, 0), S(-9, 28), S(1, 0), S(-9, -4)},
		{S(-2, 1), S(-3, 5), S(20, -12), S(29, -18), S(33, -4), S(13, 12), S(8, 9), S(-11, 14)},
		{S(7, 23), S(15, 12), S(8, 5), S(27, -9), S(42, -28), S(55, -3), S(20, 8), S(-11, 20)},
		{S(-9, 60), S(17, 30), S(22, 19), S(44, -9), S(75, -24), S(89, 8), S(36, 7), S(8, 57)},
		{S(-6, 4), S(-10, 9), S(-3, -2), S(29, -11), S(26, -25), S(30, -11), S(-87, 30), S(-129, 42)},
	},
	{
		{},
		{S(-17, 20), S(-11, 7), S(-16, 12), S(-11, 8), S(-12, 12), S(15, 9), S(28, 6), S(-4, 14)},
		{S(-16, 9), S(-18, 0), S(-12, 1), S(-7, -12), S(1, -4), S(-13, 4), S(15, 8), S(-11, 10)},
		{S(-11, 24), S(-9, 19), S(0, -11), S(18, -20), S(21, -28), S(15, 1), S(1, 16), S(-9, 20)},
		{S(-5, 54), S(8, 10), S(-5, 8), S(6, -29), S(39, -10), S(26, -16), S(33, 18), S(-10, 37)},
		{S(10, 78), S(12, 49), S(52, 12), S(37, -13), S(67, -25), S(88, 16), S(78, 28), S(-1, 60)},
		{S(-1, 55), S(-4, 20), S(17, 25), S(30, -26), S(39, -1), S(31, -14), S(-90, 30), S(-127, 52)},
	},
	{
		{},
		{S(-5, 4), S(-7, -12), S(-18, 0), S(13, 12), S(-17, 5), S(29, 7), S(27, -16), S(1, -6)},
		{S(-10, -3), S(-13, -22), S(5, -7), S(-6, -21), S(13, 5), S(-14, -7), S(21, 2), S(-11, -15)},
		{S(-4, 13), S(-10, -3), S(9, -36), S(31, -10), S(24, -43), S(36, -6), S(5, -7), S(-5, 0)},
		{S(6, 26), S(19, -26), S(5, -1), S(9, -59), S(48, -21), S(33, -37), S(34, 10), S(-4, 3)},
		{S(24, 32), S(9, 37), S(36, -20), S(50, 3), S(61, -53), S(97, 0), S(43, -17), S(6, 46)},
		{S(0, 33), S(-19, -48), S(10, 23), S(11, -67), S(33, -17), S(20, -58), S(-91, 29), S(-145, -9)},
	},
	{
		{},
		{S(-6, 21), S(-1, 14), S(-8, 26), S(-11, 18), S(-13, 31), S(14, 11), S(38, 13), S(2, 9)},
		{S(-9, 16), S(-5, 9), S(-8, 13), S(3, 5), S(3, -8), S(-2, 17), S(15, 5), S(-7, 8)},
		{S(-1, 20), S(4, 20), S(17, 5), S(21, -2), S(33, -3), S(26, 2), S(19, 15), S(-6, 17)},
		{S(1, 40), S(23, 23), S(10, 9), S(23, -5), S(45, -21), S(60, 0), S(38, 7), S(3, 35)},
		{S(5, 85), S(22, 43), S(38, 29), S(37, -26), S(86, -8), S(87, 13), S(80, 22), S(11, 53)},
		{S(-5, 15), S(1, 32), S(-3, -14), S(29, 1), S(42, -19), S(33, -16), S(-92, 23), S(-130, 49)},
	},
	{
		{},
		{S(-7, 16), S(-2, 4), S(-6, 10), S(5, 16), S(-13, 26), S(17, 15), S(34, -2), S(-3, 2)},
		{S(-5, 0), S(-11, 3), S(-4, 17), S(1, 0), S(7, 11), S(-7, 6), S(17, 2), S(-13, 2)},
		{S(3, 16), S(6, 5), S(16, -9), S(30, 6), S(32, -16), S(31, 5), S(13, 4), S(-16, 10)},
		{S(14, 17), S(23, 17), S(16, 15), S(29, -43), S(42, -21), S(54, -15), S(24, 14), S(-18, 34)},
		{S(3, 65), S(25, 40), S(32, 9), S(39, -22), S(65, -22), S(85, 2), S(51, 22), S(2, 44)},
		{S(-11, 8), S(-4, 11), S(4, 3), S(25, -12), S(34, -17), S(30, -10), S(-89, 30), S(-127, 41)},
	},
	{
		{},
		{S(-24, 19), S(-13, 17), S(-7, 6), S(-7, 13), S(-31, 6), S(0, 8), S(21, -2), S(2, -7)},
		{S(-19, 18), S(-23, 6), S(-25, 5), S(-4, -9), S(-3, -17), S(-5, -3), S(4, -3), S(-7, 0)},
		{S(-12, 31), S(-8, 16), S(7, -23), S(7, -25), S(22, -48), S(20, -19), S(-3, 16), S(-4, 10)},
		{S(-2, 32), S(12, 16), S(2, 8), S(21, -26), S(29, -18), S(34, -29), S(27, 14), S(7, 36)},
		{S(4, 84), S(20, 46), S(27, 22), S(47, -3), S(62, -19), S(85, 5), S(56, 23), S(5, 64)},
		{S(-5, 21), S(-9, 10), S(2, 9), S(21, -19), S(31, -17), S(30, -13), S(-88, 29), S(-127, 44)},
	},
	{
		{},
		{S(-9, 25), S(-1, 11), S(-11, 10), S(-3, 10), S(-18, 15), S(11, 29), S(12, 4), S(-4, 4)},
		{S(-9, 16), S(-21, 0), S(0, 10), S(2, -25), S(4, 10), S(-3, -3), S(4, 9), S(-15, -2)},
		{S(-1, 28), S(-3, 19), S(15, -18), S(28, -4), S(30, -34), S(23, 6), S(3, 5), S(-10, 7)},
		{S(13, 49), S(15, 8), S(12, 15), S(28, -47), S(47, -10), S(31, -23), S(38, 22), S(-8, 33)},
		{S(14, 68), S(29, 52), S(31, 20), S(43, -3), S(41, -16), S(83, 2), S(43, 18), S(9, 57)},
		{S(1, 26), S(-8, 10), S(4, 7), S(26, -17), S(33, -17), S(24, -16), S(-93, 27), S(-126, 46)},
	},
	{
		{},
		{S(-18, 17), S(-3, 12), S(-8, 24), S(-5, 8), S(-22, 25), S(-3, 4), S(25, 20), S(-2, 12)},
		{S(-17, 4), S(-10, 9), S(-10, -18), S(1, 0), S(-11, -15), S(-6, 13), S(3, -7), S(-9, 12)},
		{S(-12, 20), S(0, 15), S(15, 2), S(16, -31), S(33, -16), S(13, -11), S(12, 6), S(-12, 13)},
		{S(-5, 42), S(27, 25), S(1, -1), S(24, -1), S(34, -42), S(58, -12), S(30, -2), S(0, 38)},
		{S(8, 89), S(15, 27), S(44, 29), S(25, -31), S(77, -14), S(72, -1), S(51, 24), S(13, 51)},
		{S(-11, 7), S(-8, 16), S(-6, -2), S(24, -9), S(30, -23), S(31, -7), S(-88, 27), S(-130, 45)},
	},
	{
		{},
		{S(-9, 15), S(0, 21), S(-12, 21), S(-9, 9), S(-18, 10), S(1, 25), S(15, 11), S(-6, 9)},
		{S(-8, 10), S(-14, 10), S(-6, 12), S(-1, 0), S(-1, 6), S(-14, 32), S(-4, 9), S(-17, 6)},
		{S(-1, 18), S(1, 22), S(14, 4), S(22, -1), S(28, -14), S(16, 9), S(2, 17), S(-20, 18)},
		{S(8, 48), S(25, 17), S(4, 30), S(27, -29), S(38, -15), S(46, -11), S(22, 18), S(-14, 31)},
		{S(7, 80), S(22, 44), S(27, 33), S(45, -18), S(64, -28), S(68, -2), S(35, 16), S(-4, 54)},
		{S(-27, 17), S(-23, 5), S(-3, 5), S(22, -15), S(32, -21), S(31, -9), S(-84, 29), S(-132, 41)},
	},
}

// Piece Square Values
var PieceScores = [Queen + 1][8][4]Score{
	{},
	{ // knight
		{S(-93, -36), S(-25, -40), S(-31, -31), S(-23, -8)},
		{S(-23, -20), S(-24, -17), S(-17, -33), S(-19, -13)},
		{S(-18, -46), S(-5, -23), S(-13, -15), S(0, 5)},
		{S(-11, -2), S(13, -2), S(4, 20), S(3, 27)},
		{S(6, -1), S(3, 1), S(21, 23), S(13, 38)},
		{S(-28, -10), S(-18, 4), S(5, 30), S(17, 27)},
		{S(5, -29), S(-12, -11), S(31, -28), S(40, 7)},
		{S(-216, -42), S(-91, -11), S(-146, 25), S(-9, -11)},
	},
	{ // Bishop
		{S(25, -39), S(30, -5), S(9, -6), S(6, 5)},
		{S(30, -50), S(22, -39), S(31, -12), S(14, 0)},
		{S(22, -10), S(40, -2), S(11, -12), S(28, 16)},
		{S(14, -11), S(21, 5), S(23, 18), S(35, 22)},
		{S(-6, 9), S(23, 12), S(14, 22), S(37, 30)},
		{S(-3, 9), S(-4, 25), S(6, 6), S(22, 26)},
		{S(-35, 25), S(-20, 7), S(15, 21), S(-2, 32)},
		{S(-44, 1), S(-39, 28), S(-112, 42), S(-100, 49)},
	},
	{ // Rook
		{S(-18, -26), S(-10, -16), S(-3, -13), S(1, -24)},
		{S(-59, -9), S(-14, -29), S(-7, -28), S(-16, -24)},
		{S(-34, -17), S(-10, -10), S(-20, -9), S(-17, -13)},
		{S(-27, 2), S(-17, 13), S(-15, 14), S(-11, 7)},
		{S(-13, 15), S(12, 13), S(23, 14), S(32, 11)},
		{S(-14, 26), S(46, 8), S(44, 21), S(55, 7)},
		{S(-2, 32), S(4, 36), S(38, 27), S(41, 37)},
		{S(37, 36), S(57, 35), S(30, 42), S(29, 37)},
	},
	{ // Queen
		{S(8, -103), S(8, -87), S(9, -92), S(14, -58)},
		{S(5, -84), S(14, -76), S(19, -87), S(9, -47)},
		{S(2, -63), S(14, -28), S(5, 4), S(0, -8)},
		{S(0, -22), S(7, 8), S(0, 33), S(-15, 63)},
		{S(12, -11), S(5, 39), S(-11, 55), S(-23, 87)},
		{S(5, 4), S(13, 3), S(-9, 57), S(1, 54)},
		{S(-28, 9), S(-74, 53), S(-16, 54), S(-39, 86)},
		{S(-9, 12), S(25, 7), S(18, 41), S(24, 44)},
	},
}

var KingScores = [8][8]Score{
	{S(155, -5), S(143, 23), S(60, 59), S(41, 98), S(69, 72), S(46, 64), S(151, 23), S(166, -22)},
	{S(164, 37), S(114, 46), S(47, 79), S(34, 129), S(23, 140), S(59, 77), S(133, 44), S(164, 36)},
	{S(110, 25), S(161, 33), S(99, 66), S(91, 131), S(73, 140), S(116, 63), S(157, 33), S(112, 33)},
	{S(95, 15), S(251, 23), S(164, 72), S(94, 143), S(92, 148), S(157, 68), S(237, 27), S(85, 27)},
	{S(97, 44), S(284, 37), S(179, 84), S(110, 141), S(102, 145), S(184, 79), S(266, 37), S(87, 42)},
	{S(119, 41), S(306, 56), S(247, 81), S(184, 117), S(182, 120), S(248, 74), S(296, 56), S(117, 42)},
	{S(116, -4), S(212, 58), S(192, 72), S(151, 109), S(146, 109), S(187, 67), S(210, 68), S(115, -1)},
	{S(158, -102), S(291, -24), S(174, 12), S(162, 71), S(160, 70), S(172, 16), S(290, -15), S(156, -97)},
}

var PawnsConnected = [7][4]Score{
	{S(0, 0), S(0, 0), S(0, 0), S(0, 0)},
	{S(-2, -13), S(8, 4), S(3, 0), S(17, 17)},
	{S(10, 5), S(21, 4), S(24, 10), S(27, 16)},
	{S(10, 5), S(20, 9), S(11, 10), S(16, 20)},
	{S(5, 17), S(15, 26), S(31, 28), S(27, 22)},
	{S(38, 26), S(29, 63), S(77, 63), S(89, 79)},
	{S(176, 31), S(298, 23), S(292, 39), S(345, 46)},
}

var MobilityBonus = [...][32]Score{
	{S(-60, -133), S(-43, -80), S(-27, -32), S(-19, -8), S(-12, 6), S(-7, 22), // Knights
		S(1, 25), S(10, 20), S(20, 6)},
	{S(-2, -136), S(6, -65), S(13, -25), S(21, -1), S(28, 14), S(33, 30), // Bishops
		S(35, 38), S(35, 42), S(34, 45), S(38, 44), S(42, 40), S(53, 31),
		S(74, 34), S(82, 11)},
	{S(-127, -147), S(-16, -34), S(-4, 16), S(-5, 45), S(-2, 56), S(0, 69), // Rooks
		S(2, 78), S(7, 81), S(11, 87), S(15, 92), S(19, 96), S(21, 99),
		S(27, 98), S(41, 88), S(95, 52)},
	{S(-413, -159), S(-122, -138), S(-36, -175), S(-18, -118), S(-6, -81), S(-7, -7), // Queens
		S(-2, 19), S(1, 37), S(5, 52), S(8, 64), S(12, 70), S(16, 70),
		S(17, 72), S(19, 75), S(22, 67), S(19, 70), S(18, 63), S(15, 61),
		S(20, 47), S(27, 32), S(38, 11), S(39, -5), S(39, -22), S(50, -51),
		S(14, -38), S(-87, -12), S(127, -127), S(49, -81)},
}

var PassedFriendlyDistance = [8]Score{
	S(0, 0), S(-12, 40), S(-15, 24), S(-14, 8),
	S(-7, -7), S(-3, -15), S(16, -28), S(-1, -39),
}

var PassedEnemyDistance = [8]Score{
	S(0, 0), S(-124, -62), S(-14, -9), S(1, 12),
	S(13, 22), S(13, 30), S(10, 38), S(17, 43),
}

// PassedRank[Rank] contains a bonus according to the rank of a passed pawn
var PassedRank = [7]Score{S(0, 0), S(-12, -31), S(-20, -13), S(-10, 27), S(28, 68), S(53, 145), S(182, 230)}

// PassedFile[File] contains a bonus according to the file of a passed pawn
var PassedFile = [8]Score{S(-11, 31), S(-13, 32), S(-7, 12), S(-4, -4),
	S(-10, 1), S(-19, 9), S(-18, 23), S(11, 8),
}

var PassedStacked = [8]Score{S(0, 0), S(-13, -54), S(-20, -35), S(-30, -57), S(-5, -84), S(28, -207), S(0, 0), S(0, 0)}

var Isolated = S(-7, -16)
var Doubled = S(-9, -34)
var Backward = S(7, -1)
var BackwardOpen = S(-4, -16)

var BishopPair = S(20, 76)
var BishopRammedPawns = S(-8, -24)

var BishopOutpostUndefendedBonus = S(20, -3)
var BishopOutpostDefendedBonus = S(51, 13)

var LongDiagonalBishop = S(23, 24)

var KnightOutpostUndefendedBonus = S(20, -20)
var KnightOutpostDefendedBonus = S(44, 13)

var DistantKnight = [4]Score{S(-12, -3), S(-18, -11), S(-26, -18), S(-52, -22)}

var MinorBehindPawn = S(8, 32)

var Tempo int16 = 15

// Rook on semiopen, open file
var RookOnFile = [2]Score{S(10, 18), S(36, 11)}
var RookOnQueenFile = S(6, 31)

var KingDefenders = [12]Score{
	S(-5, -7), S(3, -9), S(5, -9), S(6, -7),
	S(7, -3), S(8, 5), S(9, 11), S(11, 10),
	S(9, 11), S(12, -69), S(-4, -10), S(11, 0),
}

var KingShelter = [2][8][8]Score{
	{{S(-28, 3), S(9, -18), S(17, -5), S(21, -1),
		S(25, -16), S(19, -11), S(15, -43), S(-94, 33)},
		{S(11, -3), S(21, -16), S(-5, -2), S(-10, -4),
			S(1, -11), S(25, -11), S(40, -26), S(-51, 16)},
		{S(13, 11), S(1, 8), S(-32, 11), S(-28, 9),
			S(-5, -8), S(-3, 11), S(18, -3), S(-37, 10)},
		{S(-24, 27), S(9, 7), S(-6, -2), S(-2, -3),
			S(5, -20), S(2, -4), S(23, 15), S(-16, 4)},
		{S(-33, 20), S(-17, 13), S(-33, 12), S(-21, 9),
			S(0, -6), S(-24, 2), S(7, -6), S(-27, 6)},
		{S(38, -15), S(21, -10), S(2, -8), S(2, -18),
			S(11, -25), S(23, -18), S(30, -18), S(-14, 0)},
		{S(16, -11), S(-8, -16), S(-27, -6), S(-16, -7),
			S(-8, -25), S(9, -13), S(14, -26), S(-24, 12)},
		{S(-40, 7), S(-25, -4), S(-17, 22), S(-20, 19),
			S(-22, 11), S(-9, 8), S(-10, -19), S(-74, 46)}},
	{{S(48, 44), S(-43, -11), S(-29, 3), S(-37, -4),
		S(-51, -15), S(-18, 15), S(-61, 1), S(-96, 42)},
		{S(149, 9), S(2, -10), S(-4, -1), S(-27, 14),
			S(-9, -16), S(15, -7), S(8, -7), S(-86, 27)},
		{S(4, 19), S(41, -11), S(14, -13), S(22, -18),
			S(29, -18), S(13, -12), S(43, -11), S(-26, 1)},
		{S(6, 49), S(-13, 34), S(-17, 29), S(-26, 34),
			S(-2, 19), S(-12, 14), S(-10, 21), S(-44, 7)},
		{S(-9, 43), S(-4, 23), S(-7, 18), S(-12, 15),
			S(-5, 13), S(1, -3), S(12, 3), S(-32, 8)},
		{S(32, 4), S(-2, -6), S(-11, -2), S(-5, -4),
			S(0, -11), S(-40, -4), S(-3, -16), S(-42, 3)},
		{S(40, -1), S(-5, -19), S(-8, -17), S(-25, -11),
			S(-9, -25), S(1, -24), S(1, -26), S(-74, 17)},
		{S(-8, -4), S(-16, -31), S(-9, -18), S(-4, -24),
			S(-7, -35), S(0, -26), S(-4, -52), S(-70, 29)}},
}

var KingStorm = [2][4][8]Score{
	{{S(10, 5), S(2, 12), S(8, 4), S(4, 6),
		S(2, 3), S(10, -2), S(7, 5), S(-7, -11)},
		{S(23, -7), S(16, -3), S(19, -4), S(4, 3),
			S(19, -6), S(27, -17), S(19, -16), S(-7, -14)},
		{S(23, 11), S(4, 8), S(6, 13), S(1, 14),
			S(4, 9), S(12, 2), S(10, -11), S(0, 2)},
		{S(9, 18), S(6, 14), S(10, 8), S(-1, 3),
			S(-4, 7), S(14, 5), S(8, 4), S(-11, 10)}},
	{{S(0, 0), S(16, -5), S(-19, 7), S(10, -10),
		S(-2, 15), S(-13, 27), S(5, 47), S(-3, -9)},
		{S(0, 0), S(-43, -20), S(5, -11), S(46, -13),
			S(4, -9), S(-7, -13), S(14, 55), S(-7, -9)},
		{S(0, 0), S(-17, -8), S(-8, -2), S(18, 0),
			S(7, -6), S(-8, -18), S(46, -46), S(-6, 7)},
		{S(0, 0), S(-13, -11), S(-18, -9), S(-9, 2),
			S(1, -13), S(-1, -44), S(6, 4), S(-12, 10)}},
}
var KingOnPawnlessFlank = S(18, -88)

var KingSafetyAttacksWeights = [King + 1]int16{0, -3, -7, -4, 5, 0}
var KingSafetyAttackValue int16 = 122
var KingSafetyWeakSquares int16 = 44
var KingSafetyFriendlyPawns int16 = -34
var KingSafetyNoEnemyQueens int16 = -176
var KingSafetySafeQueenCheck int16 = 89
var KingSafetySafeRookCheck int16 = 74
var KingSafetySafeBishopCheck int16 = 53
var KingSafetySafeKnightCheck int16 = 111
var KingSafetyAdjustment int16 = -10

var Hanging = S(35, 12)
var ThreatByKing = S(-8, 33)
var ThreatByMinor = [King + 1]Score{S(0, 0), S(20, 38), S(17, 36), S(32, 26), S(29, 30), S(8, 22)}
var ThreatByRook = [King + 1]Score{S(0, 0), S(-3, 11), S(-1, 16), S(-5, -9), S(34, 7), S(30, -2)}

// This weights are from black piece on black square perspective
var RookBishopExistence = [16]Score{
	S(20, -22), S(0, -9), S(0, -9), S(-1, 6), S(-6, -7), S(-1, 21), S(-10, 9), S(2, 5), S(-4, -6), S(-12, 11), S(-1, 21), S(2, 7), S(-4, -10), S(-2, 9), S(0, 8), S(-12, 31),
}
var QueenBishopExistence = [16]Score{
	S(6, -1), S(-1, 5), S(0, -8), S(-10, -4), S(-2, 4), S(1, 20), S(-6, -9), S(-5, -12), S(2, 9), S(-2, 20), S(3, 17), S(-1, -4), S(-4, -5), S(0, 11), S(-4, 3), S(-22, -11),
}
var KingBishopExistence = [16]Score{
	S(0, 0), S(-2, 1), S(0, 2), S(-4, -8), S(-1, -6), S(-2, -6), S(-1, -4), S(0, -3), S(2, 3), S(1, 4), S(2, 6), S(3, 6), S(4, 8), S(-2, -2), S(1, -1), S(0, 0),
}
