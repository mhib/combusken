package evaluation

import (
	. "github.com/mhib/combusken/backend"
)

var PawnValue = S(85, 152)
var KnightValue = S(415, 544)
var BishopValue = S(390, 538)
var RookValue = S(561, 900)
var QueenValue = S(1278, 1699)

// Pawns Square scores
// Bishop Flag, Rank, Row
var PawnScores = [16][7][8]Score{
	{
		{},
		{S(-24, 19), S(-16, 7), S(-26, 15), S(-13, 17), S(-27, 24), S(14, 15), S(33, 7), S(-13, 13)},
		{S(-21, 10), S(-23, 8), S(-23, 9), S(-11, 4), S(-6, -1), S(-3, 7), S(6, 7), S(-19, 13)},
		{S(-21, 21), S(-26, 19), S(-4, 5), S(2, -4), S(12, -11), S(14, -1), S(0, 16), S(-16, 21)},
		{S(-14, 33), S(-10, 21), S(-8, 8), S(0, -6), S(25, -14), S(30, 0), S(31, 12), S(0, 25)},
		{S(-12, 57), S(-6, 41), S(6, 31), S(30, 1), S(52, -10), S(58, 17), S(55, 34), S(-6, 59)},
		{S(-6, 14), S(-18, 39), S(-4, 39), S(12, 19), S(7, 10), S(14, 37), S(-108, 75), S(-141, 71)},
	},
	{
		{},
		{S(-14, 27), S(-8, 6), S(-22, 10), S(7, 18), S(-19, 17), S(28, 16), S(31, -4), S(-9, 12)},
		{S(-11, 12), S(-19, 3), S(-4, 8), S(-3, -3), S(9, 11), S(-4, -2), S(17, 11), S(-22, 11)},
		{S(-7, 21), S(-8, 12), S(5, -3), S(31, -3), S(25, -15), S(28, 3), S(2, 12), S(-10, 12)},
		{S(3, 34), S(13, 4), S(17, 9), S(18, -19), S(43, -11), S(47, -11), S(31, 14), S(-9, 30)},
		{S(-10, 77), S(18, 41), S(29, 20), S(52, 1), S(67, -24), S(93, 0), S(48, 9), S(-6, 58)},
		{S(0, 76), S(7, -6), S(16, 24), S(27, -21), S(45, 5), S(25, -27), S(-87, 39), S(-123, 22)},
	},
	{
		{},
		{S(-19, 15), S(-14, 14), S(-15, 22), S(-20, 4), S(7, 28), S(11, 5), S(56, 2), S(-4, 18)},
		{S(-21, 10), S(-22, 11), S(-13, 0), S(-1, 10), S(4, -11), S(5, 17), S(4, -4), S(-13, 18)},
		{S(-12, 5), S(-9, 12), S(9, 7), S(19, -11), S(42, -8), S(25, -6), S(13, 11), S(-8, 21)},
		{S(-7, 22), S(3, 15), S(2, 3), S(25, -4), S(38, -15), S(63, -1), S(27, 7), S(1, 33)},
		{S(-10, 53), S(17, 29), S(45, 14), S(47, -19), S(84, -9), S(82, 7), S(41, 27), S(16, 59)},
		{S(-11, -1), S(-2, 45), S(3, -32), S(29, 7), S(33, -36), S(30, -8), S(-92, 19), S(-120, 58)},
	},
	{
		{},
		{S(-18, 4), S(-13, -6), S(-5, -4), S(-5, -3), S(3, 11), S(10, 3), S(45, -3), S(-3, -10)},
		{S(-11, -6), S(-28, -8), S(-3, -5), S(-2, -11), S(9, -2), S(-9, 2), S(8, -7), S(-11, -15)},
		{S(-2, -11), S(-7, -11), S(12, -21), S(36, -15), S(32, -10), S(22, -3), S(21, -15), S(-2, -15)},
		{S(-16, 15), S(0, -4), S(25, -27), S(20, -17), S(41, -37), S(44, -18), S(24, 6), S(-11, -1)},
		{S(-18, 63), S(11, 21), S(28, 3), S(34, -12), S(71, -22), S(69, 0), S(48, 13), S(-8, 40)},
		{S(-8, 17), S(-9, 13), S(-2, 2), S(24, -20), S(36, -16), S(31, -9), S(-90, 30), S(-127, 49)},
	},
	{
		{},
		{S(-23, 19), S(-10, 17), S(-7, 8), S(-3, 14), S(-23, 21), S(8, 16), S(38, 6), S(-8, 14)},
		{S(-18, 8), S(-21, 5), S(-9, -14), S(3, -6), S(-11, -10), S(-3, 11), S(2, 1), S(-16, 18)},
		{S(-18, 26), S(-3, 11), S(11, -4), S(14, -28), S(32, -26), S(10, -7), S(9, 17), S(-15, 29)},
		{S(-5, 47), S(11, 18), S(5, -9), S(23, -12), S(33, -39), S(38, 8), S(31, 9), S(-5, 47)},
		{S(-27, 90), S(4, 43), S(11, 33), S(59, -24), S(69, -12), S(84, -7), S(60, 40), S(7, 72)},
		{S(17, 55), S(-5, 40), S(9, 17), S(40, 15), S(45, -27), S(39, 7), S(-83, 46), S(-118, 87)},
	},
	{
		{},
		{S(-2, 28), S(2, 16), S(-8, 19), S(-2, 18), S(-10, 22), S(16, 29), S(25, 7), S(-1, 14)},
		{S(-3, 17), S(-9, 3), S(1, 9), S(5, -7), S(5, 10), S(-2, 8), S(5, 18), S(-12, 14)},
		{S(-1, 31), S(8, 16), S(18, -3), S(30, -7), S(37, -13), S(24, 8), S(6, 22), S(-9, 23)},
		{S(16, 43), S(19, 12), S(10, 17), S(34, -15), S(50, -20), S(48, -6), S(38, 27), S(-5, 40)},
		{S(-4, 93), S(22, 54), S(42, 26), S(56, -6), S(85, -35), S(83, 9), S(38, 25), S(-1, 69)},
		{S(21, 70), S(-13, -4), S(16, 29), S(41, 2), S(33, -11), S(36, -1), S(-81, 30), S(-130, 40)},
	},
	{
		{},
		{S(-10, -15), S(-3, -8), S(-8, -4), S(-6, -17), S(-3, 10), S(1, -16), S(46, 1), S(-3, -6)},
		{S(-9, -18), S(-12, -7), S(-17, -27), S(-5, -6), S(-13, -30), S(1, -2), S(-13, -20), S(-11, 2)},
		{S(-9, -8), S(6, -28), S(14, -13), S(10, -52), S(33, -25), S(6, -25), S(12, -1), S(-11, 10)},
		{S(5, -4), S(2, 7), S(6, -36), S(14, -8), S(30, -58), S(67, -17), S(26, -22), S(15, 13)},
		{S(-26, 45), S(30, -7), S(16, 16), S(41, -42), S(69, -24), S(83, -47), S(61, 13), S(34, 11)},
		{S(1, -59), S(-1, 26), S(-18, -78), S(30, -1), S(28, -85), S(31, -4), S(-101, -61), S(-124, 48)},
	},
	{
		{},
		{S(-6, 0), S(-4, 11), S(-4, 6), S(-4, 4), S(3, 20), S(6, 15), S(34, 13), S(-2, 12)},
		{S(-6, -3), S(-18, 4), S(-5, -2), S(0, 4), S(2, -2), S(-11, 30), S(0, -1), S(-9, -3)},
		{S(-2, 2), S(-2, 4), S(19, -11), S(29, -21), S(33, -5), S(12, 11), S(6, 10), S(-11, 15)},
		{S(9, 23), S(16, 14), S(9, 6), S(26, -7), S(41, -30), S(53, -4), S(17, 9), S(-12, 19)},
		{S(-8, 58), S(21, 27), S(17, 18), S(46, -6), S(80, -29), S(90, 8), S(27, -1), S(3, 60)},
		{S(-3, -1), S(-12, 9), S(-6, -7), S(32, -11), S(19, -31), S(30, -13), S(-84, 30), S(-129, 40)},
	},
	{
		{},
		{S(-17, 23), S(-10, 9), S(-17, 13), S(-10, 7), S(-14, 11), S(13, 10), S(27, 5), S(-7, 15)},
		{S(-14, 11), S(-18, 2), S(-11, 0), S(-6, -13), S(-1, -6), S(-14, 2), S(10, 8), S(-14, 12)},
		{S(-11, 27), S(-7, 21), S(0, -12), S(18, -22), S(21, -32), S(13, 0), S(-2, 15), S(-12, 22)},
		{S(-1, 55), S(9, 11), S(-3, 6), S(6, -30), S(36, -12), S(23, -18), S(30, 18), S(-13, 39)},
		{S(10, 74), S(7, 48), S(57, 8), S(38, -14), S(67, -24), S(87, 15), S(87, 26), S(-4, 61)},
		{S(-4, 68), S(0, 29), S(25, 33), S(39, -21), S(43, 10), S(34, -14), S(-90, 31), S(-124, 58)},
	},
	{
		{},
		{S(1, 0), S(-1, -16), S(-14, -5), S(18, 7), S(-14, -2), S(33, 2), S(30, -22), S(4, -10)},
		{S(-3, -7), S(-9, -25), S(10, -13), S(0, -28), S(15, -2), S(-9, -15), S(21, -2), S(-6, -20)},
		{S(2, 10), S(-2, -9), S(13, -41), S(36, -19), S(28, -51), S(38, -13), S(9, -14), S(-1, -4)},
		{S(16, 19), S(23, -29), S(11, -10), S(13, -62), S(50, -31), S(36, -44), S(33, 4), S(1, -1)},
		{S(38, 31), S(4, 29), S(51, -23), S(49, -8), S(74, -56), S(103, -12), S(49, -23), S(8, 34)},
		{S(2, 41), S(-7, -64), S(14, 33), S(18, -77), S(33, -17), S(18, -91), S(-91, 26), S(-150, -42)},
	},
	{
		{},
		{S(-7, 25), S(-1, 17), S(-8, 29), S(-9, 20), S(-15, 33), S(12, 13), S(37, 15), S(1, 11)},
		{S(-9, 20), S(-6, 12), S(-7, 14), S(4, 6), S(1, -7), S(-3, 18), S(11, 7), S(-8, 10)},
		{S(-1, 23), S(5, 23), S(18, 6), S(21, -1), S(33, -4), S(25, 3), S(17, 16), S(-7, 20)},
		{S(3, 45), S(24, 24), S(11, 13), S(25, -9), S(42, -18), S(56, -2), S(34, 10), S(1, 37)},
		{S(7, 79), S(25, 54), S(37, 22), S(43, -9), S(86, -12), S(85, 18), S(87, 17), S(10, 57)},
		{S(2, 26), S(6, 46), S(0, -11), S(32, 10), S(52, -17), S(37, -21), S(-90, 21), S(-130, 56)},
	},
	{
		{},
		{S(-8, 18), S(0, 6), S(-7, 12), S(7, 17), S(-15, 27), S(17, 14), S(34, -3), S(-2, 1)},
		{S(-6, 4), S(-12, 5), S(-3, 19), S(2, -3), S(5, 11), S(-9, 5), S(14, 2), S(-12, 2)},
		{S(2, 18), S(8, 5), S(17, -11), S(30, 6), S(34, -21), S(29, 4), S(11, 3), S(-15, 11)},
		{S(17, 18), S(23, 20), S(16, 18), S(29, -46), S(40, -21), S(53, -21), S(19, 17), S(-19, 38)},
		{S(4, 69), S(28, 42), S(32, 6), S(43, -24), S(64, -22), S(86, -2), S(48, 22), S(0, 38)},
		{S(-12, 5), S(1, 13), S(6, 2), S(24, -11), S(34, -17), S(31, -10), S(-89, 30), S(-124, 40)},
	},
	{
		{},
		{S(-26, 21), S(-14, 19), S(-7, 2), S(-8, 11), S(-31, -1), S(-1, 7), S(20, -5), S(2, -9)},
		{S(-21, 21), S(-25, 9), S(-27, 5), S(-5, -10), S(-3, -24), S(-5, -6), S(0, -4), S(-6, -2)},
		{S(-13, 33), S(-11, 19), S(6, -23), S(6, -29), S(22, -53), S(20, -24), S(-7, 17), S(-4, 9)},
		{S(-5, 36), S(7, 24), S(1, 11), S(20, -27), S(26, -20), S(36, -39), S(24, 16), S(8, 38)},
		{S(1, 95), S(17, 51), S(23, 25), S(49, 0), S(63, -15), S(85, 5), S(60, 25), S(4, 71)},
		{S(-5, 25), S(-9, 13), S(1, 12), S(20, -19), S(30, -17), S(30, -16), S(-85, 29), S(-124, 48)},
	},
	{
		{},
		{S(-8, 29), S(-1, 12), S(-11, 11), S(-1, 9), S(-19, 12), S(13, 27), S(14, 3), S(-2, 2)},
		{S(-7, 18), S(-19, 2), S(1, 8), S(4, -29), S(3, 9), S(-2, -5), S(3, 9), S(-13, -3)},
		{S(0, 32), S(0, 19), S(16, -21), S(28, -6), S(32, -38), S(23, 3), S(5, 4), S(-8, 6)},
		{S(16, 52), S(16, 9), S(16, 15), S(29, -49), S(47, -12), S(32, -27), S(37, 24), S(-7, 35)},
		{S(15, 74), S(31, 60), S(34, 22), S(43, 1), S(44, -8), S(84, 0), S(40, 18), S(9, 60)},
		{S(9, 37), S(-7, 13), S(4, 10), S(27, -18), S(33, -16), S(19, -23), S(-96, 23), S(-122, 49)},
	},
	{
		{},
		{S(-19, 20), S(-3, 12), S(-9, 26), S(-2, 5), S(-24, 25), S(-4, 4), S(25, 20), S(-3, 14)},
		{S(-17, 6), S(-9, 9), S(-9, -21), S(1, -1), S(-12, -17), S(-7, 11), S(0, -7), S(-10, 14)},
		{S(-13, 23), S(1, 15), S(16, 1), S(17, -35), S(33, -18), S(12, -13), S(10, 6), S(-13, 15)},
		{S(-5, 47), S(27, 27), S(3, -2), S(24, -1), S(33, -45), S(57, -16), S(28, -3), S(-2, 42)},
		{S(6, 99), S(19, 28), S(48, 32), S(34, -27), S(83, -13), S(69, -1), S(53, 26), S(14, 51)},
		{S(-12, 6), S(-7, 23), S(-12, -4), S(24, -5), S(28, -25), S(31, -5), S(-85, 26), S(-130, 47)},
	},
	{
		{},
		{S(-11, 20), S(-3, 26), S(-15, 27), S(-7, 11), S(-21, 15), S(2, 28), S(14, 16), S(-7, 12)},
		{S(-9, 15), S(-15, 15), S(-7, 16), S(-3, 4), S(-3, 10), S(-16, 36), S(-7, 14), S(-17, 11)},
		{S(-3, 23), S(1, 26), S(14, 7), S(21, 3), S(28, -13), S(14, 10), S(0, 21), S(-20, 23)},
		{S(9, 53), S(25, 23), S(5, 35), S(27, -24), S(35, -13), S(43, -10), S(20, 23), S(-14, 37)},
		{S(7, 88), S(24, 52), S(24, 43), S(51, -17), S(65, -31), S(65, -4), S(32, 15), S(-7, 57)},
		{S(-37, 27), S(-32, 4), S(-6, 7), S(20, -16), S(31, -24), S(31, -9), S(-76, 28), S(-135, 39)},
	},
}

// Piece Square Values
var PieceScores = [King + 1][8][8]Score{
	{},
	{ // knight
		{S(-98, -45), S(-24, -45), S(-47, -28), S(-22, -5), S(-23, -13), S(-26, -33), S(-29, -32), S(-93, -32)},
		{S(-33, -24), S(-19, -17), S(-16, -36), S(-15, -13), S(-25, -15), S(-17, -33), S(-26, -18), S(-22, -21)},
		{S(-13, -46), S(-7, -20), S(-7, -13), S(-2, 7), S(0, 6), S(-16, -14), S(-5, -25), S(-23, -46)},
		{S(-10, -5), S(-7, 6), S(8, 20), S(-3, 30), S(11, 26), S(2, 22), S(24, -6), S(-12, 1)},
		{S(-1, 7), S(-3, 5), S(11, 31), S(12, 47), S(10, 40), S(29, 24), S(8, 6), S(10, 4)},
		{S(-43, 1), S(-26, 14), S(-2, 38), S(9, 37), S(29, 26), S(27, 26), S(-13, 3), S(-21, -7)},
		{S(3, -22), S(-11, -7), S(27, -19), S(36, 14), S(42, 6), S(54, -37), S(-17, -12), S(11, -33)},
		{S(-208, -45), S(-91, -12), S(-147, 22), S(-12, -14), S(-2, -7), S(-141, 31), S(-90, -11), S(-208, -48)},
	},
	{ // Bishop
		{S(27, -42), S(40, -8), S(9, 0), S(11, 3), S(6, 8), S(13, -8), S(17, -10), S(19, -38)},
		{S(32, -32), S(18, -37), S(39, -7), S(15, 2), S(17, -1), S(24, -16), S(30, -40), S(30, -66)},
		{S(16, -11), S(41, 2), S(8, -6), S(34, 15), S(24, 18), S(15, -14), S(39, -4), S(32, -7)},
		{S(3, -6), S(18, 8), S(27, 21), S(29, 26), S(44, 23), S(22, 20), S(27, 6), S(21, -10)},
		{S(-17, 16), S(21, 17), S(2, 29), S(42, 34), S(32, 35), S(28, 23), S(26, 16), S(2, 16)},
		{S(-12, 15), S(-15, 31), S(7, 8), S(15, 32), S(28, 31), S(5, 15), S(9, 30), S(-3, 18)},
		{S(-33, 27), S(-17, 10), S(15, 23), S(-8, 37), S(3, 33), S(14, 28), S(-18, 4), S(-36, 30)},
		{S(-40, 0), S(-44, 31), S(-117, 44), S(-100, 55), S(-103, 50), S(-105, 46), S(-32, 29), S(-41, 2)},
	},
	{ // Rook
		{S(-24, -25), S(-19, -16), S(-12, -13), S(-2, -24), S(-4, -28), S(-6, -16), S(-4, -24), S(-14, -41)},
		{S(-64, -18), S(-27, -28), S(-23, -23), S(-22, -25), S(-22, -28), S(-2, -38), S(0, -41), S(-63, -13)},
		{S(-44, -15), S(-28, -2), S(-34, -4), S(-22, -12), S(-24, -11), S(-16, -12), S(7, -18), S(-28, -22)},
		{S(-40, 8), S(-32, 23), S(-28, 23), S(-14, 12), S(-22, 10), S(-14, 13), S(-6, 8), S(-17, 1)},
		{S(-30, 29), S(-2, 26), S(9, 26), S(37, 16), S(12, 19), S(26, 13), S(24, 7), S(4, 16)},
		{S(-33, 39), S(27, 21), S(22, 29), S(47, 15), S(48, 12), S(76, 18), S(85, -4), S(14, 22)},
		{S(-21, 46), S(-14, 46), S(19, 39), S(43, 38), S(23, 44), S(69, 11), S(19, 25), S(34, 20)},
		{S(21, 38), S(42, 40), S(13, 47), S(19, 42), S(21, 41), S(43, 43), S(68, 37), S(58, 40)},
	},
	{ // Queen
		{S(6, -107), S(3, -84), S(7, -90), S(11, -52), S(11, -88), S(-10, -88), S(-5, -102), S(0, -107)},
		{S(-3, -83), S(6, -63), S(14, -85), S(4, -46), S(5, -56), S(18, -100), S(23, -104), S(15, -85)},
		{S(-7, -62), S(7, -26), S(1, 0), S(-5, -8), S(-3, -19), S(0, 5), S(18, -38), S(8, -59)},
		{S(-12, -47), S(-5, 7), S(-10, 17), S(-20, 70), S(-21, 54), S(6, 40), S(9, 10), S(14, 5)},
		{S(-24, -26), S(-14, 20), S(-31, 26), S(-25, 77), S(-30, 98), S(-2, 88), S(22, 64), S(16, 40)},
		{S(-42, -15), S(-25, -9), S(-32, 26), S(-11, 40), S(7, 71), S(38, 81), S(60, 43), S(33, 57)},
		{S(-45, 9), S(-84, 44), S(-31, 29), S(-61, 71), S(-34, 101), S(19, 85), S(-36, 76), S(11, 30)},
		{S(-34, 6), S(5, -1), S(0, 35), S(15, 41), S(21, 51), S(35, 61), S(55, 33), S(30, 35)},
	},
	{ // King
		{S(146, -6), S(131, 28), S(54, 69), S(50, 74), S(79, 53), S(49, 71), S(149, 25), S(166, -27)},
		{S(162, 33), S(104, 53), S(42, 90), S(40, 111), S(30, 121), S(52, 88), S(126, 48), S(161, 33)},
		{S(114, 24), S(160, 40), S(96, 80), S(94, 117), S(77, 125), S(105, 77), S(145, 40), S(106, 34)},
		{S(106, 15), S(263, 31), S(168, 87), S(92, 135), S(92, 137), S(155, 84), S(230, 35), S(84, 30)},
		{S(106, 50), S(298, 47), S(179, 102), S(112, 135), S(97, 141), S(190, 95), S(267, 46), S(88, 48)},
		{S(122, 44), S(314, 65), S(247, 95), S(184, 110), S(181, 116), S(252, 89), S(297, 60), S(118, 45)},
		{S(118, -5), S(216, 63), S(198, 81), S(152, 100), S(143, 100), S(187, 76), S(210, 69), S(115, 0)},
		{S(158, -109), S(291, -30), S(176, 9), S(162, 65), S(159, 63), S(172, 16), S(290, -17), S(156, -97)},
	},
}

var PawnsConnected = [7][4]Score{
	{S(0, 0), S(0, 0), S(0, 0), S(0, 0)},
	{S(-1, -14), S(7, 4), S(3, -1), S(16, 18)},
	{S(11, 6), S(22, 4), S(24, 10), S(27, 16)},
	{S(10, 5), S(20, 8), S(10, 9), S(17, 20)},
	{S(5, 16), S(16, 24), S(30, 28), S(28, 22)},
	{S(39, 30), S(28, 69), S(74, 70), S(84, 88)},
	{S(176, 34), S(295, 20), S(291, 42), S(343, 48)},
}

var MobilityBonus = [...][32]Score{
	{S(-62, -131), S(-44, -76), S(-28, -28), S(-19, -4), S(-13, 11), S(-7, 26), // Knights
		S(1, 29), S(9, 24), S(20, 9)},
	{S(0, -133), S(7, -61), S(15, -21), S(23, 2), S(30, 18), S(35, 34), // Bishops
		S(37, 42), S(38, 45), S(37, 48), S(42, 46), S(44, 42), S(57, 31),
		S(74, 38), S(80, 11)},
	{S(-127, -147), S(-16, -37), S(-5, 14), S(-5, 42), S(-1, 55), S(1, 68), // Rooks
		S(3, 78), S(8, 84), S(12, 90), S(16, 95), S(19, 102), S(21, 107),
		S(26, 108), S(41, 98), S(97, 61)},
	{S(-413, -159), S(-122, -138), S(-43, -175), S(-26, -117), S(-12, -81), S(-11, -12), // Queens
		S(-5, 13), S(-2, 33), S(2, 50), S(5, 63), S(9, 72), S(13, 74),
		S(14, 77), S(16, 81), S(19, 74), S(17, 77), S(17, 71), S(15, 69),
		S(21, 56), S(29, 40), S(41, 19), S(44, 2), S(45, -18), S(55, -47),
		S(16, -36), S(-84, -13), S(127, -127), S(49, -81)},
}

var PassedFriendlyDistance = [8]Score{
	S(0, 0), S(-10, 42), S(-14, 26), S(-10, 10),
	S(-5, -4), S(2, -15), S(21, -27), S(7, -41),
}

var PassedEnemyDistance = [8]Score{
	S(0, 0), S(-95, -45), S(-7, -9), S(5, 7),
	S(13, 20), S(11, 28), S(7, 37), S(17, 41),
}

// PassedRank[Rank] contains a bonus according to the rank of a passed pawn, whether it can be pushed and whether the push would be safe
var PassedRank = [2][2][2][7]Score{
	{
		{
			{S(0, 0), S(-33, -38), S(-34, -2), S(-24, 7), S(27, 16), S(27, 64), S(137, 154)},
			{S(0, 0), S(-32, -46), S(-31, -15), S(-15, 6), S(31, 33), S(36, 96), S(150, 187)},
		},
		{
			{S(0, 0), S(-14, -29), S(-32, 1), S(-22, 21), S(10, 49), S(59, 86), S(196, 161)},
			{S(0, 0), S(-6, -47), S(-21, -7), S(-12, 24), S(19, 68), S(54, 115), S(178, 193)},
		},
	},
	{
		{
			{S(0, 0), S(-14, -15), S(-26, -11), S(-7, 15), S(31, 46), S(67, 97), S(240, 189)},
			{S(0, 0), S(-12, -28), S(-18, -12), S(-7, 30), S(45, 60), S(85, 106), S(230, 216)},
		},
		{
			{S(0, 0), S(-30, -14), S(-32, -9), S(-21, 36), S(11, 95), S(59, 219), S(232, 321)},
			{S(0, 0), S(-13, -36), S(-20, -16), S(-17, 35), S(9, 99), S(71, 210), S(235, 316)},
		},
	},
}

// PassedFile[File] contains a bonus according to the file of a passed pawn
var PassedFile = [8]Score{S(-5, 28), S(-5, 30), S(-1, 12), S(0, -1),
	S(-8, 3), S(-18, 13), S(-18, 26), S(8, 11),
}

var PassedStacked = [7]Score{S(0, 0), S(-15, -52), S(-21, -35), S(-30, -48), S(-1, -67), S(32, -196), S(0, 0)}

var Isolated = S(-7, -17)
var Doubled = S(-11, -31)
var Backward = S(7, -1)
var BackwardOpen = S(-5, -17)

var BishopPair = S(18, 75)
var BishopRammedPawns = S(-8, -23)

var BishopOutpostUndefendedBonus = S(23, -3)
var BishopOutpostDefendedBonus = S(54, 12)

var LongDiagonalBishop = S(23, 25)

var KnightOutpostUndefendedBonus = S(23, -22)
var KnightOutpostDefendedBonus = S(48, 12)

var DistantKnight = [4]Score{S(-16, -3), S(-17, -14), S(-29, -16), S(-54, -23)}

var MinorBehindPawn = S(8, 29)

var Tempo int16 = 15

// Rook on semiopen, open file
var RookOnFile = [2]Score{S(12, 10), S(40, 2)}
var RookOnQueenFile = S(6, 32)

var KingDefenders = [12]Score{
	S(-16, -8), S(-4, -10), S(0, -9), S(4, -7),
	S(6, -4), S(9, 5), S(13, 11), S(16, 10),
	S(15, 12), S(14, -69), S(-4, -10), S(11, 0),
}

var KingShelter = [2][8][8]Score{
	{{S(-27, 9), S(9, -12), S(18, 1), S(23, 4),
		S(30, -13), S(21, -6), S(16, -38), S(-96, 39)},
		{S(14, 7), S(22, -6), S(-5, 9), S(-8, 7),
			S(2, -1), S(25, 2), S(40, -14), S(-47, 22)},
		{S(14, 3), S(4, -1), S(-27, 1), S(-22, -1),
			S(1, -17), S(-1, 5), S(19, -8), S(-31, 1)},
		{S(-19, 17), S(11, -2), S(-6, -9), S(-1, -9),
			S(6, -25), S(1, -9), S(23, 16), S(-15, -2)},
		{S(-33, 17), S(-15, 8), S(-31, 8), S(-18, 6),
			S(2, -9), S(-21, -1), S(9, -6), S(-26, 3)},
		{S(40, -18), S(23, -14), S(5, -12), S(5, -22),
			S(14, -28), S(26, -20), S(32, -20), S(-12, -3)},
		{S(15, -2), S(-8, -7), S(-28, 3), S(-17, 2),
			S(-7, -15), S(9, -3), S(14, -17), S(-23, 19)},
		{S(-41, 10), S(-27, -1), S(-19, 26), S(-20, 23),
			S(-21, 16), S(-10, 12), S(-11, -16), S(-71, 48)}},
	{{S(48, 46), S(-41, -10), S(-27, 4), S(-34, -5),
		S(-47, -15), S(-14, 11), S(-56, -6), S(-96, 40)},
		{S(150, 13), S(3, -2), S(-3, 5), S(-23, 19),
			S(-6, -11), S(17, -1), S(10, 1), S(-82, 27)},
		{S(5, 28), S(36, 3), S(13, -1), S(21, -6),
			S(29, -6), S(13, -1), S(39, 3), S(-25, 6)},
		{S(4, 34), S(-11, 20), S(-13, 15), S(-21, 20),
			S(2, 8), S(-7, 3), S(-8, 18), S(-42, -5)},
		{S(-9, 26), S(-1, 9), S(-6, 4), S(-12, 2),
			S(-5, 1), S(1, -13), S(12, -3), S(-31, -4)},
		{S(30, 14), S(-5, 6), S(-13, 9), S(-7, 8),
			S(-2, 1), S(-36, 7), S(-6, -2), S(-40, 10)},
		{S(38, 3), S(-5, -15), S(-9, -11), S(-26, -6),
			S(-9, -20), S(1, -18), S(2, -21), S(-72, 20)},
		{S(-11, -5), S(-16, -30), S(-9, -17), S(-4, -23),
			S(-6, -34), S(1, -24), S(-4, -51), S(-68, 26)}},
}

var KingStorm = [2][4][8]Score{
	{{S(11, 9), S(3, 16), S(9, 8), S(4, 10),
		S(2, 6), S(10, 2), S(8, 8), S(-11, -6)},
		{S(23, 1), S(16, 6), S(19, 4), S(5, 11),
			S(20, 2), S(27, -9), S(19, -7), S(-7, -6)},
		{S(22, 10), S(3, 7), S(5, 11), S(1, 12),
			S(3, 8), S(11, 1), S(8, -10), S(-2, 3)},
		{S(12, 3), S(8, -1), S(12, -9), S(1, -12),
			S(-2, -6), S(16, -13), S(9, -10), S(-9, 1)}},
	{{S(0, 0), S(14, 1), S(-18, 11), S(10, -5),
		S(-2, 21), S(-13, 32), S(6, 50), S(-6, -4)},
		{S(0, 0), S(-44, -11), S(6, -3), S(47, -5),
			S(5, 0), S(-7, -5), S(15, 57), S(-7, 0)},
		{S(0, 0), S(-17, -10), S(-7, -4), S(17, -2),
			S(6, -6), S(-11, -19), S(42, -44), S(-7, 7)},
		{S(0, 0), S(-15, -24), S(-15, -23), S(-6, -11),
			S(2, -24), S(0, -55), S(5, 4), S(-10, -4)}},
}
var KingOnPawnlessFlank = S(19, -71)

var KingSafetyAttacksWeights = [King + 1]int16{0, -3, -7, -4, 4, 0}
var KingSafetyAttackValue int16 = 124
var KingSafetyWeakSquares int16 = 44
var KingSafetyFriendlyPawns int16 = -35
var KingSafetyNoEnemyQueens int16 = -176
var KingSafetySafeQueenCheck int16 = 90
var KingSafetySafeRookCheck int16 = 73
var KingSafetySafeBishopCheck int16 = 51
var KingSafetySafeKnightCheck int16 = 112
var KingSafetyAdjustment int16 = -12

var Hanging = S(38, 15)
var ThreatByKing = S(-10, 35)
var ThreatByMinor = [King + 1]Score{S(0, 0), S(20, 38), S(17, 37), S(33, 27), S(30, 29), S(4, 25)}
var ThreatByRook = [King + 1]Score{S(0, 0), S(-4, 13), S(-2, 17), S(-5, -10), S(33, 9), S(27, 4)}

// This weights are from black piece on black square perspective
var RookBishopExistence = [16]Score{
	S(21, -25), S(2, -10), S(3, -11), S(0, 3), S(-3, -9), S(-4, 31), S(-7, 4), S(0, 12), S(0, -9), S(-9, 4), S(-3, 32), S(0, 13), S(-6, -14), S(-2, 13), S(0, 13), S(-16, 42),
}
var QueenBishopExistence = [16]Score{
	S(16, -20), S(-3, 3), S(-2, -12), S(-16, -7), S(-5, 1), S(6, 49), S(-11, -3), S(-4, -12), S(0, 4), S(-7, 23), S(8, 45), S(0, -2), S(-16, -10), S(-2, 17), S(-7, 9), S(-22, -5),
}
var KingBishopExistence = [16]Score{
	S(0, 0), S(-2, 2), S(-1, 3), S(-9, -10), S(0, -8), S(-2, -6), S(-1, -3), S(-1, 1), S(3, 0), S(1, 3), S(2, 6), S(2, 10), S(9, 10), S(0, -7), S(2, -5), S(0, 0),
}
