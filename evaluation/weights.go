package evaluation

import (
	. "github.com/mhib/combusken/backend"
)

var PawnValue = S(82, 152)
var KnightValue = S(418, 540)
var BishopValue = S(390, 531)
var RookValue = S(564, 875)
var QueenValue = S(1397, 1572)

// Pawns Square scores
// Bishop Flag, Rank, Row
var PawnScores = [16][7][8]Score{
	{
		{},
		{S(-24, 18), S(-18, 6), S(-25, 15), S(-11, 17), S(-24, 25), S(18, 14), S(40, 4), S(-7, 11)},
		{S(-22, 7), S(-23, 7), S(-22, 9), S(-13, 7), S(-4, 2), S(1, 7), S(11, 5), S(-13, 10)},
		{S(-21, 17), S(-27, 18), S(-3, 6), S(2, 0), S(15, -7), S(18, 1), S(7, 15), S(-10, 18)},
		{S(-17, 31), S(-10, 20), S(-9, 10), S(-1, -2), S(31, -12), S(36, 1), S(40, 10), S(7, 22)},
		{S(-12, 65), S(7, 49), S(17, 39), S(33, 9), S(62, -4), S(72, 16), S(58, 40), S(2, 64)},
		{S(-8, 10), S(-6, 31), S(5, 32), S(26, 11), S(30, -1), S(31, 19), S(-89, 58), S(-128, 64)},
	},
	{
		{},
		{S(-15, 24), S(-9, 3), S(-20, 10), S(4, 18), S(-18, 17), S(27, 16), S(35, -5), S(-8, 11)},
		{S(-12, 7), S(-18, 1), S(-3, 7), S(-4, -1), S(11, 14), S(-6, 1), S(19, 11), S(-21, 10)},
		{S(-8, 17), S(-11, 11), S(5, -2), S(30, 1), S(25, -12), S(28, 6), S(7, 12), S(-9, 11)},
		{S(0, 31), S(14, -1), S(12, 15), S(18, -20), S(46, -8), S(45, -8), S(37, 12), S(-7, 27)},
		{S(-4, 61), S(23, 46), S(29, 10), S(53, 5), S(66, -30), S(86, 6), S(50, 7), S(5, 56)},
		{S(-3, 32), S(-9, -3), S(4, 8), S(23, -24), S(35, -13), S(28, -16), S(-90, 30), S(-130, 32)},
	},
	{
		{},
		{S(-16, 13), S(-10, 10), S(-10, 19), S(-18, 5), S(8, 30), S(13, 5), S(60, 0), S(-1, 17)},
		{S(-18, 6), S(-18, 7), S(-10, -1), S(3, 9), S(7, -9), S(9, 16), S(5, -2), S(-10, 17)},
		{S(-9, 2), S(-6, 9), S(13, 6), S(21, -8), S(45, -5), S(27, -4), S(17, 12), S(-5, 19)},
		{S(-6, 17), S(7, 12), S(6, -1), S(28, 0), S(44, -16), S(58, 5), S(34, 4), S(4, 31)},
		{S(-4, 59), S(16, 17), S(40, 24), S(39, -27), S(79, -6), S(84, 2), S(53, 24), S(11, 54)},
		{S(-11, -6), S(-6, 20), S(-1, -19), S(26, -9), S(32, -29), S(30, -9), S(-91, 25), S(-128, 46)},
	},
	{
		{},
		{S(-17, 7), S(-6, -9), S(-4, 1), S(-4, 9), S(-3, 19), S(12, 7), S(45, 5), S(-4, 0)},
		{S(-12, -1), S(-23, -7), S(-1, -3), S(0, -9), S(14, 2), S(-7, 6), S(9, -1), S(-12, -5)},
		{S(-5, -1), S(-8, 1), S(12, -16), S(38, -7), S(36, -9), S(24, 3), S(12, 1), S(-10, 4)},
		{S(-11, 17), S(7, 2), S(11, -2), S(22, -18), S(42, -21), S(39, -8), S(32, 8), S(-7, 15)},
		{S(-5, 62), S(17, 34), S(31, 18), S(42, -9), S(67, -19), S(81, 4), S(54, 21), S(3, 51)},
		{S(-6, 14), S(-8, 10), S(3, 5), S(26, -14), S(33, -18), S(30, -9), S(-90, 30), S(-129, 44)},
	},
	{
		{},
		{S(-19, 14), S(-7, 13), S(-3, 6), S(0, 16), S(-18, 19), S(10, 15), S(43, 4), S(-5, 13)},
		{S(-14, 2), S(-20, 2), S(-6, -14), S(5, -4), S(-7, -8), S(-2, 12), S(3, 2), S(-13, 15)},
		{S(-14, 19), S(0, 9), S(14, -5), S(16, -25), S(36, -23), S(12, -5), S(10, 18), S(-11, 26)},
		{S(-1, 42), S(15, 13), S(4, -7), S(28, -11), S(36, -36), S(48, 5), S(36, 8), S(-1, 44)},
		{S(-10, 78), S(16, 41), S(28, 24), S(47, -17), S(69, -17), S(84, -5), S(56, 27), S(6, 67)},
		{S(2, 37), S(-8, 13), S(5, 7), S(29, -7), S(33, -24), S(32, -9), S(-89, 32), S(-126, 52)},
	},
	{
		{},
		{S(-3, 23), S(2, 10), S(-7, 15), S(-3, 15), S(-9, 20), S(15, 27), S(28, 2), S(0, 11)},
		{S(-5, 11), S(-11, -1), S(0, 7), S(4, -7), S(6, 9), S(-2, 7), S(5, 16), S(-11, 10)},
		{S(-2, 24), S(6, 14), S(18, -5), S(30, -6), S(36, -13), S(24, 8), S(8, 19), S(-9, 19)},
		{S(13, 38), S(18, 6), S(8, 16), S(33, -19), S(51, -20), S(48, -7), S(41, 21), S(-2, 32)},
		{S(-1, 74), S(24, 46), S(35, 19), S(50, -4), S(69, -33), S(82, 5), S(48, 18), S(6, 58)},
		{S(1, 28), S(-11, 0), S(5, 9), S(28, -11), S(33, -18), S(30, -9), S(-89, 30), S(-130, 42)},
	},
	{
		{},
		{S(-10, -5), S(-1, -1), S(-3, 3), S(-7, 3), S(1, 21), S(0, -2), S(50, 8), S(-2, 2)},
		{S(-10, -7), S(-11, -3), S(-16, -16), S(0, -3), S(-11, -17), S(-3, 15), S(-12, -11), S(-9, 8)},
		{S(-8, -4), S(1, -13), S(17, -7), S(10, -37), S(33, -10), S(4, -7), S(13, 12), S(-8, 12)},
		{S(-1, 12), S(9, 8), S(4, -22), S(21, -5), S(33, -44), S(60, 2), S(24, -1), S(7, 26)},
		{S(-15, 59), S(18, 22), S(27, 19), S(31, -24), S(72, -18), S(80, -3), S(53, 21), S(13, 51)},
		{S(-7, 5), S(-8, 12), S(-7, -15), S(27, -10), S(32, -29), S(30, -9), S(-93, 17), S(-128, 45)},
	},
	{
		{},
		{S(-7, 2), S(-3, 7), S(-3, 4), S(-6, 9), S(3, 23), S(6, 14), S(37, 9), S(-2, 11)},
		{S(-8, -2), S(-18, -1), S(-5, 1), S(2, -1), S(4, 2), S(-7, 20), S(1, -1), S(-10, -3)},
		{S(-4, 5), S(-5, 8), S(19, -10), S(28, -13), S(33, -5), S(12, 10), S(9, 7), S(-12, 15)},
		{S(5, 26), S(15, 9), S(7, 7), S(28, -11), S(41, -23), S(51, -3), S(21, 7), S(-12, 22)},
		{S(-9, 60), S(16, 35), S(27, 20), S(45, -9), S(69, -20), S(85, 6), S(47, 16), S(8, 54)},
		{S(-6, 10), S(-8, 10), S(1, 3), S(26, -12), S(31, -20), S(30, -9), S(-90, 30), S(-129, 44)},
	},
	{
		{},
		{S(-16, 19), S(-10, 6), S(-15, 12), S(-8, 7), S(-12, 14), S(16, 8), S(29, 5), S(-3, 13)},
		{S(-14, 7), S(-17, -1), S(-11, 0), S(-6, -11), S(2, -4), S(-13, 4), S(15, 7), S(-11, 9)},
		{S(-10, 23), S(-7, 19), S(1, -11), S(18, -19), S(22, -28), S(15, 1), S(1, 15), S(-9, 19)},
		{S(-3, 51), S(10, 9), S(-2, 6), S(7, -28), S(40, -10), S(26, -16), S(34, 17), S(-7, 34)},
		{S(10, 75), S(17, 44), S(44, 16), S(39, -12), S(68, -23), S(86, 12), S(66, 27), S(3, 55)},
		{S(-3, 33), S(-8, 11), S(9, 15), S(25, -25), S(35, -11), S(30, -12), S(-90, 30), S(-129, 45)},
	},
	{
		{},
		{S(-9, 12), S(-10, -6), S(-21, 8), S(7, 14), S(-20, 12), S(25, 14), S(23, -9), S(-3, 0)},
		{S(-12, 2), S(-17, -13), S(2, -1), S(-10, -12), S(11, 10), S(-17, -2), S(19, 5), S(-14, -10)},
		{S(-7, 20), S(-13, 4), S(4, -25), S(29, -5), S(20, -33), S(31, 2), S(1, 1), S(-11, 9)},
		{S(5, 31), S(11, -11), S(5, 2), S(3, -45), S(46, -16), S(24, -19), S(34, 11), S(-10, 19)},
		{S(9, 64), S(16, 37), S(30, 9), S(47, 0), S(63, -25), S(90, 5), S(49, 14), S(4, 52)},
		{S(-4, 21), S(-12, -1), S(5, 12), S(19, -29), S(33, -18), S(28, -18), S(-90, 30), S(-134, 34)},
	},
	{
		{},
		{S(-6, 19), S(-1, 11), S(-8, 25), S(-10, 13), S(-12, 29), S(14, 9), S(38, 11), S(2, 7)},
		{S(-9, 14), S(-6, 7), S(-7, 11), S(3, 5), S(3, -9), S(-1, 15), S(15, 3), S(-6, 6)},
		{S(-1, 18), S(4, 18), S(17, 3), S(21, -3), S(33, -4), S(26, 0), S(20, 13), S(-6, 16)},
		{S(2, 38), S(24, 19), S(10, 7), S(23, -7), S(44, -22), S(58, -2), S(38, 5), S(3, 31)},
		{S(6, 76), S(21, 39), S(36, 24), S(34, -25), S(79, -13), S(85, 9), S(66, 23), S(9, 51)},
		{S(-7, 11), S(-5, 19), S(-1, -7), S(26, -8), S(35, -19), S(30, -12), S(-91, 27), S(-130, 44)},
	},
	{
		{},
		{S(-9, 15), S(-2, 3), S(-7, 10), S(4, 13), S(-14, 24), S(17, 14), S(32, -2), S(-4, 1)},
		{S(-7, -1), S(-12, 2), S(-3, 11), S(-1, 3), S(6, 9), S(-8, 6), S(15, 3), S(-15, 2)},
		{S(1, 15), S(4, 7), S(15, -7), S(29, 3), S(30, -12), S(29, 4), S(11, 6), S(-18, 11)},
		{S(11, 22), S(22, 15), S(15, 10), S(26, -33), S(41, -19), S(49, -8), S(25, 9), S(-18, 27)},
		{S(0, 62), S(21, 38), S(31, 15), S(40, -15), S(67, -20), S(81, 4), S(55, 24), S(1, 50)},
		{S(-8, 12), S(-8, 10), S(3, 5), S(26, -12), S(33, -18), S(29, -10), S(-90, 30), S(-129, 43)},
	},
	{
		{},
		{S(-21, 20), S(-8, 13), S(-7, 12), S(-2, 17), S(-29, 12), S(2, 11), S(20, 3), S(-1, -1)},
		{S(-14, 16), S(-20, 4), S(-21, 3), S(-3, -8), S(-4, -6), S(-7, 1), S(3, 1), S(-9, 1)},
		{S(-8, 29), S(-5, 12), S(9, -23), S(9, -19), S(21, -40), S(18, -9), S(2, 12), S(-5, 8)},
		{S(4, 30), S(16, 6), S(5, 6), S(22, -29), S(35, -16), S(30, -20), S(32, 14), S(3, 30)},
		{S(5, 74), S(21, 42), S(30, 19), S(46, -5), S(60, -23), S(84, 4), S(53, 21), S(6, 58)},
		{S(-5, 18), S(-9, 8), S(3, 7), S(22, -20), S(32, -18), S(30, -11), S(-90, 29), S(-129, 41)},
	},
	{
		{},
		{S(-8, 21), S(-1, 9), S(-12, 10), S(-3, 9), S(-19, 16), S(12, 28), S(13, 2), S(-3, 4)},
		{S(-8, 13), S(-21, -1), S(0, 7), S(1, -18), S(4, 9), S(-4, -1), S(4, 8), S(-14, -2)},
		{S(0, 23), S(-3, 17), S(14, -16), S(28, -7), S(29, -28), S(23, 5), S(3, 5), S(-11, 9)},
		{S(15, 38), S(14, 7), S(12, 10), S(24, -37), S(47, -13), S(29, -18), S(40, 16), S(-7, 29)},
		{S(13, 65), S(25, 43), S(31, 21), S(44, -7), S(50, -19), S(82, 4), S(50, 21), S(7, 54)},
		{S(-4, 17), S(-8, 9), S(3, 5), S(26, -14), S(33, -18), S(28, -11), S(-90, 30), S(-129, 44)},
	},
	{
		{},
		{S(-17, 13), S(-1, 10), S(-7, 22), S(-5, 11), S(-20, 20), S(-2, 5), S(26, 18), S(0, 10)},
		{S(-15, 2), S(-10, 9), S(-10, -12), S(1, 1), S(-11, -13), S(-6, 15), S(3, -7), S(-8, 10)},
		{S(-10, 15), S(1, 14), S(16, 1), S(16, -24), S(34, -17), S(12, -8), S(13, 7), S(-11, 10)},
		{S(-2, 35), S(30, 18), S(0, 3), S(27, -10), S(33, -37), S(57, -9), S(30, 1), S(0, 34)},
		{S(9, 77), S(17, 32), S(38, 24), S(29, -25), S(70, -17), S(77, 1), S(49, 22), S(7, 51)},
		{S(-9, 11), S(-9, 11), S(0, 2), S(25, -12), S(32, -20), S(31, -8), S(-89, 29), S(-130, 44)},
	},
	{
		{},
		{S(-8, 8), S(1, 14), S(-12, 15), S(-8, 9), S(-18, 8), S(2, 19), S(15, 6), S(-6, 4)},
		{S(-8, 4), S(-14, 4), S(-5, 4), S(-1, -3), S(0, 2), S(-13, 24), S(-3, 4), S(-17, 2)},
		{S(0, 13), S(2, 15), S(15, -1), S(23, -6), S(29, -18), S(16, 4), S(3, 11), S(-20, 14)},
		{S(10, 38), S(26, 12), S(5, 19), S(28, -28), S(38, -20), S(44, -11), S(24, 10), S(-13, 25)},
		{S(8, 69), S(21, 39), S(30, 24), S(44, -12), S(67, -22), S(73, 2), S(44, 20), S(-2, 53)},
		{S(-14, 14), S(-14, 8), S(1, 5), S(25, -13), S(33, -18), S(30, -9), S(-89, 30), S(-129, 44)},
	},
}

// Piece Square Values
var PieceScores = [Queen + 1][8][4]Score{
	{},
	{ // knight
		{S(-93, -40), S(-25, -43), S(-30, -34), S(-22, -11)},
		{S(-22, -23), S(-23, -20), S(-17, -36), S(-19, -16)},
		{S(-18, -48), S(-4, -26), S(-12, -17), S(1, 3)},
		{S(-10, -6), S(14, -4), S(5, 17), S(4, 24)},
		{S(7, -4), S(4, -1), S(21, 20), S(14, 36)},
		{S(-26, -13), S(-18, 1), S(6, 27), S(18, 24)},
		{S(6, -32), S(-12, -13), S(32, -30), S(41, 4)},
		{S(-228, -36), S(-92, -11), S(-150, 24), S(-11, -13)},
	},
	{ // Bishop
		{S(24, -37), S(29, -4), S(8, -5), S(6, 6)},
		{S(30, -49), S(21, -39), S(30, -11), S(14, 0)},
		{S(21, -10), S(39, -2), S(10, -12), S(28, 15)},
		{S(14, -12), S(21, 3), S(23, 17), S(35, 21)},
		{S(-6, 8), S(23, 12), S(14, 20), S(36, 28)},
		{S(-3, 9), S(-4, 25), S(7, 4), S(23, 24)},
		{S(-36, 26), S(-20, 7), S(15, 21), S(-1, 29)},
		{S(-44, 3), S(-39, 29), S(-113, 42), S(-97, 47)},
	},
	{ // Rook
		{S(-17, -27), S(-9, -16), S(-2, -14), S(3, -25)},
		{S(-58, -11), S(-13, -31), S(-5, -29), S(-15, -26)},
		{S(-33, -19), S(-8, -11), S(-18, -11), S(-16, -15)},
		{S(-25, 1), S(-15, 12), S(-13, 13), S(-10, 5)},
		{S(-12, 14), S(13, 12), S(24, 13), S(33, 10)},
		{S(-13, 25), S(48, 7), S(45, 20), S(57, 5)},
		{S(0, 31), S(5, 34), S(40, 25), S(43, 35)},
		{S(42, 33), S(63, 32), S(38, 39), S(35, 34)},
	},
	{ // Queen
		{S(9, -105), S(9, -90), S(10, -94), S(15, -60)},
		{S(6, -86), S(15, -78), S(19, -89), S(9, -49)},
		{S(3, -65), S(14, -30), S(6, 2), S(0, -10)},
		{S(1, -23), S(8, 5), S(1, 31), S(-14, 60)},
		{S(13, -11), S(6, 38), S(-10, 52), S(-22, 85)},
		{S(6, 4), S(15, 1), S(-9, 55), S(2, 51)},
		{S(-28, 10), S(-74, 54), S(-15, 52), S(-38, 84)},
		{S(-7, 10), S(28, 4), S(23, 35), S(30, 39)},
	},
}

var KingScores = [8][8]Score{
	{S(165, -19), S(150, 18), S(59, 58), S(53, 90), S(67, 73), S(50, 61), S(150, 21), S(166, -24)},
	{S(166, 34), S(126, 39), S(52, 76), S(29, 129), S(21, 138), S(59, 75), S(132, 42), S(165, 35)},
	{S(107, 29), S(157, 33), S(110, 62), S(83, 132), S(75, 137), S(114, 62), S(155, 31), S(109, 33)},
	{S(87, 21), S(239, 25), S(158, 72), S(96, 143), S(95, 145), S(155, 68), S(236, 25), S(87, 26)},
	{S(91, 47), S(272, 39), S(181, 84), S(108, 142), S(107, 143), S(181, 80), S(269, 37), S(89, 44)},
	{S(117, 43), S(300, 60), S(248, 82), S(184, 120), S(184, 121), S(248, 77), S(298, 59), S(117, 43)},
	{S(115, 0), S(211, 64), S(189, 73), S(149, 113), S(149, 113), S(189, 73), S(211, 68), S(115, 0)},
	{S(157, -98), S(290, -18), S(173, 18), S(161, 75), S(161, 75), S(173, 18), S(290, -17), S(157, -98)},
}

var PawnsConnected = [7][4]Score{
	{S(0, 0), S(0, 0), S(0, 0), S(0, 0)},
	{S(-2, -13), S(8, 4), S(3, 0), S(17, 18)},
	{S(11, 6), S(22, 4), S(24, 10), S(27, 16)},
	{S(10, 6), S(20, 8), S(10, 9), S(17, 20)},
	{S(5, 16), S(16, 26), S(31, 28), S(28, 21)},
	{S(38, 28), S(30, 61), S(76, 62), S(93, 75)},
	{S(176, 30), S(300, 26), S(294, 40), S(346, 44)},
}

var MobilityBonus = [...][32]Score{
	{S(-61, -134), S(-44, -82), S(-28, -36), S(-20, -12), S(-13, 3), S(-8, 18), // Knights
		S(0, 21), S(9, 16), S(19, 2)},
	{S(-1, -138), S(6, -64), S(14, -25), S(22, -1), S(29, 14), S(34, 31), // Bishops
		S(36, 40), S(35, 43), S(35, 46), S(39, 46), S(42, 42), S(53, 34),
		S(80, 35), S(89, 11)},
	{S(-127, -146), S(-15, -36), S(-4, 14), S(-4, 43), S(-1, 54), S(1, 66), // Rooks
		S(3, 76), S(7, 78), S(12, 83), S(16, 88), S(19, 92), S(22, 95),
		S(27, 95), S(42, 84), S(97, 48)},
	{S(-413, -159), S(-122, -138), S(-31, -174), S(-15, -119), S(-3, -84), S(-3, -14), // Queens
		S(1, 13), S(5, 31), S(8, 46), S(12, 58), S(15, 65), S(19, 65),
		S(21, 66), S(22, 70), S(25, 62), S(21, 66), S(21, 60), S(18, 58),
		S(23, 45), S(30, 30), S(40, 10), S(38, -2), S(39, -21), S(49, -50),
		S(14, -38), S(-88, -10), S(127, -127), S(49, -81)},
}

var PassedFriendlyDistance = [8]Score{
	S(0, 0), S(-11, 40), S(-14, 24), S(-13, 9),
	S(-6, -6), S(-2, -15), S(16, -27), S(-1, -37),
}

var PassedEnemyDistance = [8]Score{
	S(0, 0), S(-129, -57), S(-15, -9), S(2, 12),
	S(14, 22), S(14, 30), S(11, 37), S(18, 41),
}

// PassedRank[Rank] contains a bonus according to the rank of a passed pawn
var PassedRank = [7]Score{S(0, 0), S(-13, -31), S(-20, -13), S(-9, 26), S(29, 67), S(52, 145), S(178, 237)}

// PassedFile[File] contains a bonus according to the file of a passed pawn
var PassedFile = [8]Score{S(-11, 34), S(-13, 34), S(-7, 12), S(-3, -4),
	S(-10, 1), S(-18, 10), S(-17, 23), S(12, 10),
}

var PassedStacked = [8]Score{S(0, 0), S(-13, -53), S(-20, -35), S(-31, -56), S(-3, -85), S(28, -207), S(0, 0), S(0, 0)}

var Isolated = S(-7, -16)
var Doubled = S(-10, -34)
var Backward = S(7, -1)
var BackwardOpen = S(-4, -15)

var BishopPair = S(19, 74)
var BishopRammedPawns = S(-8, -23)

var BishopOutpostUndefendedBonus = S(19, -3)
var BishopOutpostDefendedBonus = S(51, 13)

var LongDiagonalBishop = S(23, 24)

var KnightOutpostUndefendedBonus = S(19, -20)
var KnightOutpostDefendedBonus = S(45, 13)

var DistantKnight = [4]Score{S(-12, -2), S(-18, -11), S(-27, -17), S(-52, -20)}

var MinorBehindPawn = S(8, 32)

var Tempo int16 = 15

// Rook on semiopen, open file
var RookOnFile = [2]Score{S(9, 18), S(35, 11)}
var RookOnQueenFile = S(5, 31)

var KingDefenders = [12]Score{
	S(-4, -9), S(3, -8), S(5, -8), S(6, -6),
	S(8, -3), S(10, 5), S(11, 11), S(13, 10),
	S(11, 8), S(15, -70), S(-3, -10), S(11, 0),
}

var KingShelter = [2][8][8]Score{
	{{S(-27, 4), S(7, -17), S(15, -4), S(19, -1),
		S(23, -15), S(17, -10), S(12, -40), S(-95, 33)},
		{S(9, -1), S(22, -16), S(-3, -1), S(-10, -3),
			S(-1, -10), S(24, -10), S(40, -26), S(-51, 17)},
		{S(12, 13), S(-1, 9), S(-32, 12), S(-29, 10),
			S(-8, -7), S(-5, 13), S(15, -1), S(-38, 10)},
		{S(-28, 29), S(10, 7), S(-5, -2), S(-1, -3),
			S(7, -19), S(3, -5), S(25, 9), S(-15, 4)},
		{S(-28, 20), S(-15, 12), S(-33, 12), S(-22, 10),
			S(-1, -5), S(-27, 4), S(3, -7), S(-28, 6)},
		{S(38, -14), S(21, -9), S(3, -7), S(2, -17),
			S(12, -24), S(24, -16), S(30, -17), S(-14, 1)},
		{S(16, -11), S(-8, -16), S(-27, -7), S(-16, -7),
			S(-7, -25), S(10, -13), S(15, -26), S(-24, 11)},
		{S(-40, 7), S(-26, -4), S(-18, 22), S(-21, 19),
			S(-23, 11), S(-10, 7), S(-11, -18), S(-75, 46)}},
	{{S(48, 42), S(-45, -10), S(-29, 2), S(-39, -1),
		S(-51, -12), S(-22, 17), S(-67, 5), S(-92, 38)},
		{S(149, 9), S(-1, -8), S(-6, 0), S(-28, 13),
			S(-14, -13), S(14, -7), S(7, -7), S(-87, 28)},
		{S(5, 22), S(41, -12), S(14, -13), S(23, -19),
			S(30, -19), S(15, -12), S(45, -12), S(-26, 1)},
		{S(6, 49), S(-11, 34), S(-17, 29), S(-24, 33),
			S(-2, 19), S(-17, 17), S(-12, 21), S(-44, 8)},
		{S(-10, 44), S(-3, 24), S(-6, 18), S(-12, 15),
			S(-4, 13), S(2, -6), S(14, -3), S(-31, 8)},
		{S(34, 3), S(-3, -5), S(-9, -2), S(-3, -4),
			S(2, -12), S(-44, -2), S(-6, -13), S(-41, 3)},
		{S(43, -1), S(-2, -18), S(-5, -16), S(-23, -10),
			S(-7, -24), S(4, -22), S(3, -24), S(-71, 18)},
		{S(-5, -3), S(-15, -32), S(-8, -19), S(-3, -24),
			S(-7, -35), S(0, -25), S(-5, -51), S(-69, 28)}},
}

var KingStorm = [2][4][8]Score{
	{{S(11, 5), S(3, 11), S(9, 4), S(5, 5),
		S(3, 3), S(10, -2), S(8, 5), S(-6, -11)},
		{S(21, -7), S(14, -2), S(16, -4), S(2, 4),
			S(17, -6), S(24, -17), S(17, -15), S(-9, -14)},
		{S(23, 11), S(4, 7), S(6, 12), S(1, 14),
			S(4, 9), S(11, 1), S(9, -11), S(0, 1)},
		{S(8, 18), S(6, 14), S(10, 8), S(-1, 3),
			S(-3, 7), S(15, 4), S(9, -2), S(-10, 10)}},
	{{S(0, 0), S(19, -5), S(-18, 6), S(10, -10),
		S(-2, 15), S(-14, 30), S(4, 51), S(-2, -9)},
		{S(0, 0), S(-41, -20), S(2, -10), S(43, -12),
			S(1, -8), S(-11, -10), S(13, 56), S(-10, -8)},
		{S(0, 0), S(-17, -9), S(-7, -3), S(17, -1),
			S(7, -7), S(-7, -18), S(47, -47), S(-6, 7)},
		{S(0, 0), S(-13, -13), S(-17, -10), S(-8, 3),
			S(1, -14), S(0, -48), S(6, 3), S(-12, 12)}},
}
var KingOnPawnlessFlank = S(18, -89)

var KingSafetyAttacksWeights = [King + 1]int16{0, -3, -7, -4, 5, 0}
var KingSafetyAttackValue int16 = 122
var KingSafetyWeakSquares int16 = 44
var KingSafetyFriendlyPawns int16 = -34
var KingSafetyNoEnemyQueens int16 = -176
var KingSafetySafeQueenCheck int16 = 89
var KingSafetySafeRookCheck int16 = 74
var KingSafetySafeBishopCheck int16 = 53
var KingSafetySafeKnightCheck int16 = 111
var KingSafetyAdjustment int16 = -10

var Hanging = S(34, 13)
var ThreatByKing = S(-9, 33)
var ThreatByMinor = [King + 1]Score{S(0, 0), S(20, 38), S(17, 35), S(32, 26), S(29, 32), S(10, 22)}
var ThreatByRook = [King + 1]Score{S(0, 0), S(-3, 11), S(-1, 16), S(-5, -9), S(34, 7), S(29, -1)}

// This weights are from black piece on black square perspective
var RookBishopExistence = [16]Score{
	S(1, -13), S(0, -5), S(0, -5), S(1, 5), S(-6, -5), S(2, 7), S(0, 3), S(2, 3), S(-3, -4), S(-1, 5), S(3, 7), S(2, 5), S(-3, -4), S(-2, 4), S(0, 4), S(-1, 4),
}
var QueenBishopExistence = [16]Score{
	S(2, 4), S(1, 2), S(-1, -5), S(-3, -1), S(-2, 1), S(-1, 2), S(-6, -6), S(-5, -5), S(2, 7), S(4, 6), S(1, 1), S(0, 0), S(0, 1), S(2, 4), S(-4, 0), S(-3, -2),
}
var KingBishopExistence = [16]Score{
	S(0, 0), S(-2, 2), S(0, 2), S(0, -2), S(-1, -6), S(-3, -6), S(-1, -3), S(-1, -3), S(2, 2), S(1, 3), S(3, 6), S(2, 6), S(0, 2), S(-1, -2), S(2, -1), S(0, 0),
}
