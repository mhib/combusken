package evaluation

import (
	. "github.com/mhib/combusken/backend"
	. "github.com/mhib/combusken/utils"
)

var PawnValue = S(78, 166)
var KnightValue = S(399, 564)
var BishopValue = S(382, 548)
var RookValue = S(519, 938)
var QueenValue = S(1203, 1771)

// Pawns Square scores
// Bishop Flag, Rank, Row
var PawnScores = [16][7][8]Score{
	{
		{},
		{S(-15, 18), S(-8, 7), S(-18, 15), S(-5, 17), S(-18, 25), S(18, 23), S(32, 16), S(-10, 18)},
		{S(-14, 9), S(-14, 7), S(-15, 6), S(-2, 1), S(0, 1), S(-1, 13), S(6, 15), S(-16, 17)},
		{S(-14, 20), S(-19, 17), S(2, 0), S(9, -9), S(17, -12), S(17, 6), S(1, 25), S(-14, 27)},
		{S(-7, 32), S(-1, 18), S(-3, 3), S(9, -11), S(27, -13), S(29, 7), S(30, 24), S(-1, 34)},
		{S(2, 56), S(12, 37), S(21, 27), S(47, -5), S(65, -14), S(66, 23), S(66, 39), S(8, 61)},
		{S(9, -1), S(-21, 31), S(2, 24), S(18, 0), S(-19, 8), S(-16, 22), S(-124, 65), S(-141, 54)},
	},
	{
		{},
		{S(-12, 25), S(-5, 6), S(-18, 10), S(9, 16), S(-16, 19), S(28, 17), S(27, 2), S(-9, 13)},
		{S(-9, 10), S(-16, 2), S(-3, 5), S(0, -6), S(9, 10), S(-3, -1), S(15, 12), S(-20, 10)},
		{S(-6, 19), S(-9, 12), S(5, -7), S(28, -6), S(23, -18), S(28, 1), S(2, 13), S(-11, 14)},
		{S(3, 32), S(14, 3), S(15, 5), S(20, -24), S(39, -12), S(42, -11), S(27, 17), S(-11, 32)},
		{S(-14, 83), S(33, 24), S(24, 26), S(67, -19), S(60, -16), S(102, -10), S(40, 26), S(-2, 49)},
		{S(-22, 66), S(10, 5), S(28, 6), S(16, -8), S(57, -11), S(16, -25), S(-83, 33), S(-108, 27)},
	},
	{
		{},
		{S(-18, 16), S(-13, 14), S(-15, 22), S(-15, 3), S(6, 27), S(11, 9), S(47, 6), S(-8, 20)},
		{S(-20, 9), S(-21, 9), S(-12, -2), S(0, 8), S(5, -12), S(5, 15), S(1, -2), S(-17, 19)},
		{S(-13, 7), S(-10, 10), S(7, 4), S(18, -15), S(39, -13), S(23, -6), S(6, 15), S(-13, 22)},
		{S(-9, 23), S(1, 14), S(-1, 1), S(25, -9), S(34, -16), S(54, -2), S(21, 13), S(-5, 32)},
		{S(0, 46), S(8, 38), S(62, -9), S(44, -10), S(96, -29), S(68, 22), S(25, 27), S(6, 65)},
		{S(-32, 19), S(-18, 42), S(12, -21), S(21, 6), S(27, -29), S(30, -22), S(-91, 27), S(-101, 29)},
	},
	{
		{},
		{S(-18, 6), S(-10, -5), S(-3, -6), S(5, -18), S(9, -1), S(14, 0), S(43, -9), S(0, -16)},
		{S(-11, -5), S(-26, -5), S(-1, -8), S(0, -10), S(11, -7), S(-5, -3), S(7, -12), S(-8, -22)},
		{S(-3, -9), S(-6, -12), S(11, -23), S(33, -19), S(32, -17), S(23, -11), S(23, -24), S(4, -26)},
		{S(-17, 18), S(0, -4), S(33, -45), S(19, -15), S(40, -41), S(41, -24), S(18, 4), S(-5, -12)},
		{S(-26, 75), S(13, 16), S(41, -25), S(24, 1), S(83, -32), S(40, 7), S(38, 13), S(-16, 31)},
		{S(-15, 33), S(-28, 33), S(-27, 9), S(17, -36), S(52, 0), S(44, -8), S(-91, 32), S(-120, 71)},
	},
	{
		{},
		{S(-19, 18), S(-11, 17), S(-5, 6), S(-3, 14), S(-20, 21), S(8, 19), S(34, 11), S(-10, 17)},
		{S(-16, 8), S(-20, 5), S(-7, -17), S(4, -6), S(-6, -12), S(-6, 13), S(2, 3), S(-17, 19)},
		{S(-16, 26), S(-5, 10), S(10, -9), S(13, -30), S(30, -30), S(12, -8), S(4, 21), S(-16, 30)},
		{S(-5, 48), S(9, 17), S(3, -12), S(23, -16), S(32, -40), S(33, 7), S(28, 13), S(-11, 49)},
		{S(-24, 88), S(5, 43), S(7, 31), S(63, -21), S(71, -16), S(81, -5), S(56, 40), S(4, 71)},
		{S(37, 40), S(-27, 43), S(5, 25), S(42, 18), S(73, -36), S(52, 17), S(-78, 61), S(-125, 98)},
	},
	{
		{},
		{S(-4, 30), S(2, 17), S(-9, 21), S(-1, 20), S(-8, 24), S(16, 31), S(26, 9), S(-2, 16)},
		{S(-5, 18), S(-9, 3), S(0, 8), S(6, -5), S(6, 9), S(-2, 9), S(6, 19), S(-12, 15)},
		{S(-3, 32), S(5, 17), S(15, -4), S(28, -9), S(34, -16), S(22, 9), S(7, 23), S(-9, 25)},
		{S(13, 43), S(17, 14), S(7, 13), S(31, -15), S(44, -19), S(44, -5), S(34, 29), S(-8, 43)},
		{S(-8, 98), S(29, 43), S(35, 34), S(65, -18), S(75, -21), S(80, 6), S(28, 47), S(-4, 73)},
		{S(15, 68), S(-37, 21), S(12, 41), S(51, 17), S(22, -2), S(51, 31), S(-52, 21), S(-132, 47)},
	},
	{
		{},
		{S(-4, -18), S(1, -12), S(-3, -8), S(5, -26), S(3, 4), S(9, -17), S(46, 1), S(0, -9)},
		{S(-4, -19), S(-8, -13), S(-10, -33), S(3, -14), S(-5, -33), S(4, -6), S(-7, -22), S(-7, -3)},
		{S(-4, -11), S(7, -32), S(16, -22), S(14, -57), S(36, -33), S(11, -29), S(14, -3), S(-9, 7)},
		{S(7, -4), S(9, -3), S(9, -42), S(22, -20), S(36, -64), S(69, -27), S(29, -20), S(16, 7)},
		{S(-6, 22), S(45, -9), S(23, -9), S(47, -33), S(80, -54), S(94, -50), S(85, -17), S(46, 10)},
		{S(87, -85), S(5, 22), S(19, -84), S(27, -11), S(76, -106), S(21, 3), S(-35, -120), S(-111, 21)},
	},
	{
		{},
		{S(-6, 5), S(-4, 15), S(-5, 8), S(0, 5), S(3, 19), S(8, 16), S(31, 17), S(-3, 12)},
		{S(-7, 2), S(-17, 7), S(-6, 0), S(2, 5), S(4, -5), S(-9, 26), S(0, 2), S(-10, -2)},
		{S(-3, 7), S(-3, 5), S(15, -9), S(27, -22), S(31, -7), S(11, 9), S(5, 12), S(-11, 16)},
		{S(7, 27), S(14, 16), S(6, 6), S(25, -5), S(37, -26), S(47, -7), S(16, 14), S(-13, 21)},
		{S(-4, 56), S(25, 30), S(15, 23), S(44, 14), S(83, -33), S(83, 17), S(21, -10), S(-5, 78)},
		{S(12, -6), S(-41, 20), S(-21, -2), S(58, -8), S(-26, -55), S(33, -39), S(-64, 39), S(-135, 18)},
	},
	{
		{},
		{S(-14, 22), S(-6, 7), S(-14, 14), S(-6, 6), S(-12, 14), S(14, 14), S(22, 10), S(-9, 18)},
		{S(-11, 10), S(-14, 0), S(-9, -3), S(-1, -15), S(1, -6), S(-15, 3), S(6, 12), S(-15, 14)},
		{S(-9, 27), S(-9, 20), S(2, -15), S(19, -27), S(22, -34), S(13, 1), S(-6, 19), S(-16, 27)},
		{S(-1, 54), S(10, 10), S(-3, 2), S(11, -34), S(33, -14), S(21, -15), S(22, 23), S(-17, 41)},
		{S(11, 75), S(10, 45), S(62, 4), S(45, -19), S(66, -20), S(84, 14), S(96, 22), S(-7, 62)},
		{S(-32, 58), S(-12, 36), S(44, 17), S(44, -19), S(38, 22), S(42, -16), S(-86, 21), S(-123, 62)},
	},
	{
		{},
		{S(5, -3), S(8, -23), S(-6, -8), S(26, -4), S(-4, -9), S(37, 1), S(32, -22), S(9, -15)},
		{S(2, -12), S(0, -31), S(14, -21), S(8, -32), S(21, -9), S(-5, -17), S(22, -4), S(-1, -22)},
		{S(5, 6), S(2, -15), S(18, -48), S(39, -29), S(32, -57), S(41, -17), S(11, -16), S(3, -7)},
		{S(21, 11), S(29, -32), S(19, -25), S(21, -67), S(54, -40), S(39, -45), S(34, 0), S(5, -3)},
		{S(39, 30), S(20, 2), S(56, -21), S(74, -43), S(84, -54), S(136, -48), S(68, -19), S(28, 5)},
		{S(1, 19), S(36, -72), S(7, 46), S(53, -80), S(17, -31), S(65, -119), S(-100, -9), S(-117, -71)},
	},
	{
		{},
		{S(-8, 27), S(-1, 17), S(-8, 31), S(-7, 20), S(-13, 34), S(13, 16), S(29, 20), S(-3, 13)},
		{S(-10, 20), S(-7, 13), S(-6, 11), S(4, 7), S(2, -6), S(-3, 17), S(5, 11), S(-12, 13)},
		{S(-2, 24), S(1, 22), S(15, 4), S(19, -4), S(31, -8), S(23, 3), S(9, 19), S(-11, 24)},
		{S(1, 47), S(17, 24), S(9, 9), S(22, -9), S(37, -17), S(47, -3), S(26, 19), S(-6, 39)},
		{S(7, 76), S(14, 66), S(44, 10), S(34, 9), S(89, -22), S(74, 29), S(90, 8), S(2, 67)},
		{S(-13, 47), S(-11, 67), S(-13, 15), S(27, 19), S(80, -15), S(66, -50), S(-89, 25), S(-156, 75)},
	},
	{
		{},
		{S(-9, 22), S(-1, 9), S(-6, 15), S(9, 18), S(-11, 28), S(19, 15), S(28, -1), S(-1, 2)},
		{S(-8, 9), S(-12, 8), S(-3, 19), S(4, -2), S(7, 10), S(-6, 4), S(9, 2), S(-11, 2)},
		{S(0, 22), S(5, 6), S(14, -10), S(29, 1), S(32, -23), S(28, 4), S(7, 4), S(-13, 11)},
		{S(13, 23), S(18, 23), S(12, 19), S(28, -43), S(38, -19), S(48, -25), S(16, 21), S(-18, 39)},
		{S(0, 80), S(23, 54), S(33, 8), S(44, -17), S(61, -11), S(87, -13), S(40, 42), S(1, 34)},
		{S(-16, -8), S(3, 27), S(9, 5), S(21, 5), S(34, -7), S(37, 0), S(-88, 35), S(-117, 35)},
	},
	{
		{},
		{S(-25, 25), S(-15, 18), S(-5, 1), S(-5, 4), S(-22, -12), S(3, 6), S(21, -6), S(1, -8)},
		{S(-21, 22), S(-25, 11), S(-24, 1), S(-2, -10), S(2, -29), S(-5, -12), S(1, -4), S(-5, -3)},
		{S(-14, 34), S(-15, 18), S(5, -26), S(8, -36), S(24, -60), S(22, -28), S(-9, 17), S(-4, 10)},
		{S(-9, 39), S(1, 30), S(-2, 8), S(20, -31), S(26, -27), S(41, -50), S(18, 19), S(4, 38)},
		{S(-23, 131), S(-2, 74), S(4, 47), S(48, 15), S(63, -2), S(84, 2), S(70, 31), S(-18, 106)},
		{S(-15, 49), S(-13, 39), S(-16, 36), S(-1, -8), S(15, -9), S(30, -45), S(-52, 33), S(-93, 78)},
	},
	{
		{},
		{S(-9, 32), S(0, 13), S(-9, 12), S(0, 9), S(-14, 13), S(13, 28), S(15, 2), S(-2, 3)},
		{S(-8, 22), S(-17, 2), S(2, 5), S(6, -27), S(6, 4), S(-5, -5), S(4, 7), S(-11, -3)},
		{S(-2, 35), S(-2, 17), S(15, -21), S(25, -9), S(31, -41), S(22, 2), S(5, 3), S(-7, 5)},
		{S(12, 54), S(14, 12), S(13, 10), S(29, -49), S(43, -15), S(32, -26), S(32, 21), S(-7, 35)},
		{S(9, 88), S(25, 75), S(27, 40), S(39, 16), S(36, 32), S(87, -14), S(35, 35), S(4, 66)},
		{S(11, 99), S(-29, 48), S(-3, 30), S(33, -15), S(30, -5), S(-11, -50), S(-120, -9), S(-106, 83)},
	},
	{
		{},
		{S(-16, 24), S(-5, 13), S(-7, 24), S(-1, 4), S(-20, 26), S(0, 6), S(20, 23), S(-7, 18)},
		{S(-14, 8), S(-11, 10), S(-6, -22), S(2, -1), S(-9, -17), S(-7, 9), S(-3, -3), S(-14, 17)},
		{S(-11, 27), S(-4, 15), S(13, -2), S(16, -37), S(31, -21), S(13, -14), S(6, 7), S(-15, 19)},
		{S(-5, 50), S(19, 27), S(1, -4), S(21, -2), S(33, -46), S(51, -22), S(23, -2), S(-8, 44)},
		{S(-1, 110), S(16, 45), S(46, 31), S(29, 6), S(90, -17), S(60, 12), S(47, 31), S(6, 61)},
		{S(-13, 14), S(-17, 76), S(-51, 28), S(10, 26), S(8, -24), S(28, 10), S(-76, 21), S(-134, 64)},
	},
	{
		{},
		{S(-11, 26), S(-3, 29), S(-13, 30), S(-6, 17), S(-17, 18), S(2, 32), S(13, 20), S(-10, 19)},
		{S(-10, 21), S(-15, 18), S(-6, 17), S(-2, 10), S(-2, 11), S(-15, 35), S(-8, 18), S(-19, 17)},
		{S(-3, 27), S(-2, 27), S(12, 8), S(18, 4), S(26, -11), S(13, 14), S(-1, 24), S(-20, 27)},
		{S(7, 55), S(18, 27), S(3, 32), S(22, -15), S(30, -7), S(38, -7), S(16, 28), S(-16, 41)},
		{S(4, 96), S(16, 71), S(14, 75), S(43, 9), S(57, -15), S(59, -1), S(28, 27), S(-10, 70)},
		{S(-90, 111), S(-74, 21), S(-36, 47), S(5, 1), S(15, -41), S(32, 3), S(-60, 16), S(-162, 25)},
	},
}

// Piece Square Values
var PieceScores = [King + 1][8][8]Score{
	{},
	{ // knight
		{S(-77, -89), S(-24, -44), S(-42, -33), S(-23, -4), S(-26, -10), S(-28, -31), S(-30, -32), S(-82, -43)},
		{S(-30, -33), S(-18, -22), S(-17, -36), S(-19, -10), S(-27, -11), S(-20, -31), S(-28, -15), S(-24, -22)},
		{S(-14, -46), S(-9, -19), S(-10, -12), S(-5, 9), S(-5, 10), S(-18, -11), S(-8, -21), S(-24, -45)},
		{S(-11, -5), S(-8, 7), S(5, 23), S(-5, 35), S(7, 33), S(-1, 27), S(19, 1), S(-13, 2)},
		{S(-3, 9), S(-4, 9), S(7, 35), S(7, 54), S(5, 47), S(22, 33), S(6, 12), S(7, 9)},
		{S(-50, 6), S(-25, 16), S(-6, 42), S(4, 43), S(23, 33), S(19, 37), S(-14, 11), S(-20, -1)},
		{S(-2, -24), S(-15, -6), S(20, -18), S(27, 18), S(33, 10), S(56, -39), S(-26, -6), S(11, -36)},
		{S(-204, -55), S(-98, -10), S(-154, 26), S(-31, -7), S(8, -9), S(-128, 31), S(-75, -11), S(-191, -74)},
	},
	{ // Bishop
		{S(30, -40), S(48, -13), S(5, 1), S(13, 2), S(-2, 11), S(13, -8), S(12, -13), S(21, -41)},
		{S(43, -38), S(20, -36), S(43, -9), S(7, 5), S(16, 0), S(16, -14), S(31, -41), S(20, -64)},
		{S(20, -9), S(49, -1), S(7, -6), S(33, 14), S(15, 21), S(16, -13), S(29, 1), S(32, -10)},
		{S(16, -6), S(20, 8), S(32, 18), S(22, 28), S(43, 23), S(14, 21), S(26, 6), S(12, -6)},
		{S(-9, 18), S(30, 15), S(1, 31), S(41, 35), S(21, 38), S(27, 24), S(20, 17), S(2, 17)},
		{S(4, 12), S(-10, 33), S(15, 6), S(7, 35), S(27, 33), S(-4, 22), S(9, 33), S(-7, 21)},
		{S(-29, 32), S(-6, 8), S(11, 26), S(-13, 39), S(-10, 40), S(13, 29), S(-21, 9), S(-27, 31)},
		{S(-23, -3), S(-64, 41), S(-126, 51), S(-106, 60), S(-106, 55), S(-100, 48), S(23, 17), S(-42, 1)},
	},
	{ // Rook
		{S(-22, -29), S(-18, -18), S(-12, -17), S(-4, -26), S(-5, -29), S(-6, -17), S(-3, -27), S(-9, -47)},
		{S(-56, -24), S(-23, -34), S(-21, -26), S(-19, -31), S(-19, -31), S(-2, -38), S(4, -47), S(-52, -20)},
		{S(-41, -16), S(-28, -2), S(-33, -5), S(-19, -15), S(-22, -13), S(-16, -10), S(8, -17), S(-24, -21)},
		{S(-38, 8), S(-33, 25), S(-28, 24), S(-16, 11), S(-22, 11), S(-16, 16), S(-7, 11), S(-16, 2)},
		{S(-32, 34), S(-7, 31), S(1, 32), S(28, 21), S(8, 22), S(19, 20), S(16, 16), S(0, 21)},
		{S(-35, 46), S(18, 27), S(11, 39), S(36, 21), S(38, 19), S(60, 30), S(80, 1), S(6, 31)},
		{S(-26, 55), S(-20, 56), S(7, 49), S(29, 49), S(13, 53), S(63, 19), S(14, 36), S(24, 30)},
		{S(17, 43), S(27, 47), S(0, 56), S(10, 48), S(11, 50), S(59, 43), S(75, 37), S(59, 42)},
	},
	{ // Queen
		{S(5, -106), S(0, -80), S(3, -82), S(7, -49), S(8, -80), S(-12, -76), S(5, -121), S(5, -112)},
		{S(-4, -80), S(5, -62), S(11, -81), S(2, -43), S(3, -50), S(16, -97), S(22, -103), S(16, -91)},
		{S(-9, -58), S(7, -29), S(1, -5), S(-6, -10), S(-5, -15), S(-1, 4), S(17, -37), S(8, -54)},
		{S(-12, -46), S(-6, 4), S(-10, 11), S(-19, 65), S(-20, 53), S(4, 38), S(8, 8), S(12, 10)},
		{S(-27, -20), S(-16, 20), S(-30, 22), S(-25, 75), S(-30, 99), S(-3, 89), S(18, 73), S(13, 48)},
		{S(-45, -2), S(-28, -4), S(-30, 20), S(-11, 39), S(6, 73), S(44, 73), S(54, 57), S(23, 80)},
		{S(-46, 16), S(-77, 42), S(-28, 24), S(-59, 74), S(-35, 109), S(24, 83), S(-35, 81), S(14, 31)},
		{S(-44, 24), S(-10, 13), S(-14, 48), S(10, 44), S(14, 60), S(60, 50), S(87, 19), S(59, 11)},
	},
	{ // King
		{S(142, -10), S(128, 27), S(56, 62), S(61, 66), S(77, 48), S(59, 62), S(150, 19), S(165, -31)},
		{S(152, 37), S(101, 56), S(42, 91), S(40, 111), S(37, 120), S(54, 88), S(128, 47), S(156, 32)},
		{S(115, 28), S(149, 45), S(88, 84), S(88, 120), S(71, 130), S(100, 82), S(137, 47), S(107, 36)},
		{S(142, 11), S(263, 31), S(157, 91), S(85, 140), S(88, 144), S(143, 93), S(218, 43), S(95, 30)},
		{S(133, 49), S(324, 42), S(158, 107), S(111, 138), S(89, 147), S(193, 101), S(266, 51), S(101, 51)},
		{S(140, 47), S(324, 62), S(223, 103), S(173, 110), S(174, 118), S(253, 94), S(301, 64), S(136, 42)},
		{S(136, -4), S(222, 60), S(212, 75), S(177, 89), S(127, 97), S(174, 77), S(203, 68), S(125, -3)},
		{S(180, -123), S(312, -40), S(201, 1), S(173, 54), S(154, 53), S(167, 11), S(287, -27), S(145, -101)},
	},
}

var PawnsConnected = [7][4]Score{
	{S(0, 0), S(0, 0), S(0, 0), S(0, 0)},
	{S(-1, -15), S(7, 3), S(2, -2), S(14, 15)},
	{S(10, 4), S(21, 2), S(22, 11), S(24, 15)},
	{S(9, 5), S(20, 10), S(10, 11), S(14, 21)},
	{S(5, 17), S(16, 25), S(26, 31), S(26, 24)},
	{S(36, 31), S(21, 73), S(62, 76), S(70, 94)},
	{S(176, 38), S(280, 21), S(275, 57), S(316, 56)},
}

var MobilityBonus = [...][32]Score{
	{S(-63, -124), S(-46, -66), S(-32, -19), S(-24, 3), S(-18, 16), S(-13, 32), // Knights
		S(-5, 35), S(4, 31), S(14, 17)},
	{S(3, -123), S(8, -56), S(16, -16), S(22, 6), S(29, 19), S(33, 34), // Bishops
		S(35, 42), S(35, 46), S(34, 48), S(38, 49), S(41, 43), S(51, 35),
		S(70, 36), S(77, 9)},
	{S(-110, -156), S(-13, -26), S(-4, 25), S(-5, 52), S(-2, 60), S(-1, 73), // Rooks
		S(1, 83), S(4, 89), S(9, 95), S(12, 101), S(15, 108), S(15, 115),
		S(21, 116), S(35, 103), S(92, 58)},
	{S(-413, -159), S(-130, -143), S(-43, -178), S(-22, -116), S(-9, -80), S(-10, -12), // Queens
		S(-6, 16), S(-3, 35), S(1, 51), S(4, 64), S(6, 72), S(10, 74),
		S(11, 77), S(13, 82), S(16, 77), S(13, 82), S(13, 78), S(11, 78),
		S(15, 67), S(21, 54), S(33, 32), S(36, 14), S(39, -2), S(51, -40),
		S(24, -28), S(-59, -8), S(140, -118), S(56, -79)},
}

var PassedFriendlyDistance = [8]Score{
	S(0, 0), S(-1, 36), S(-8, 21), S(-8, 7),
	S(-4, -8), S(-1, -18), S(12, -29), S(4, -43),
}

var PassedEnemyDistance = [8]Score{
	S(0, 0), S(-77, -47), S(0, -14), S(3, 5),
	S(8, 17), S(8, 24), S(6, 31), S(14, 37),
}

// PassedRank[Rank] contains a bonus according to the rank of a passed pawn, whether it can be pushed and whether the push would be safe
var PassedRank = [2][2][2][7]Score{
	{
		{
			{S(0, 0), S(-45, -26), S(-35, 6), S(-22, 12), S(31, 14), S(45, 16), S(171, 88)},
			{S(0, 0), S(-31, -57), S(-28, -23), S(-16, 4), S(31, 24), S(60, 35), S(162, 126)},
		},
		{
			{S(0, 0), S(-17, -28), S(-25, -1), S(-16, 20), S(14, 48), S(53, 82), S(247, 140)},
			{S(0, 0), S(-8, -54), S(-23, -6), S(-16, 24), S(15, 59), S(73, 87), S(221, 176)},
		},
	},
	{
		{
			{S(0, 0), S(-18, -9), S(-28, -4), S(-8, 21), S(30, 48), S(62, 97), S(272, 179)},
			{S(0, 0), S(-14, -22), S(-18, -5), S(-7, 35), S(35, 66), S(72, 107), S(228, 223)},
		},
		{
			{S(0, 0), S(-28, -13), S(-24, -13), S(-10, 30), S(21, 84), S(32, 231), S(75, 411)},
			{S(0, 0), S(-13, -34), S(-15, -16), S(-8, 32), S(23, 91), S(55, 218), S(134, 425)},
		},
	},
}

// PassedFile[File] contains a bonus according to the file of a passed pawn
var PassedFile = [8]Score{S(-1, 23), S(-2, 27), S(-2, 11), S(-5, -4),
	S(-10, 1), S(-18, 8), S(-16, 20), S(6, 7),
}

var PassedStacked = [7]Score{S(0, 0), S(-19, -62), S(-30, -46), S(-46, -61), S(-30, -65), S(40, -106), S(0, 0)}
var PassedUncontested = [6]Score{S(0, 0), S(-83, 44), S(-71, 42), S(-80, 46), S(-78, 49), S(-65, 38)}
var PassedPushDefended = [6]Score{S(0, 0), S(-2, 20), S(0, 6), S(6, 1), S(-2, 5), S(-16, 16)}
var PassedPushUncontestedDefended = [6]Score{S(0, 0), S(-57, 36), S(-36, 25), S(-63, 50), S(-71, 62), S(-58, 76)}

var Isolated = S(-4, -15)

// Is doubled, can be traded
var StackedPawns = [2][2][8]Score{
	{
		{S(-14, -42), S(-13, -26), S(-3, -25), S(-8, -19), S(-13, -20), S(-3, -26), S(3, -33), S(12, -45)},
		{S(-19, -44), S(-12, -23), S(-4, -19), S(-17, -20), S(-18, -15), S(-9, -27), S(-9, -33), S(5, -51)},
	},
	{
		{S(-19, -50), S(-15, -28), S(-15, -37), S(-25, -42), S(-17, -33), S(1, -38), S(-6, -39), S(-9, -58)},
		{S(-25, -55), S(-4, -38), S(-21, -35), S(-22, -32), S(-19, -34), S(-5, -45), S(4, -47), S(-17, -64)},
	},
}
var AttackedBySafePawn = [5]Score{
	S(40, 73),
	S(38, 83),
	S(34, 34),
	S(36, 25),
	S(33, 31),
}

var Backward = S(8, -2)
var BackwardOpen = S(-4, -20)

var BishopPair = S(12, 80)
var BishopRammedPawns = S(-7, -23)

var BishopOutpostUndefendedBonus = S(19, -5)
var BishopOutpostDefendedBonus = S(48, 13)

var LongDiagonalBishop = S(20, 25)
var DistantBishop = [4]Score{S(-7, 1), S(-11, 0), S(-14, -2), S(-15, -20)}

var KnightOutpostUndefendedBonus = S(18, -24)
var KnightOutpostDefendedBonus = S(40, 14)

var DistantKnight = [4]Score{S(-15, -2), S(-16, -13), S(-28, -14), S(-49, -18)}

var MinorBehindPawn = S(7, 28)

var Tempo int16 = 15

// Rook on semiopen, open file
var RookOnFile = [2]Score{S(12, 12), S(37, 5)}
var RookOnQueenFile = S(6, 26)
var TrappedRook = S(-33, 1)

var KingDefenders = [12]Score{
	S(-25, -11), S(-5, -10), S(0, -7), S(4, -4),
	S(7, -2), S(10, 4), S(13, 9), S(17, 9),
	S(18, 13), S(17, -62), S(-16, -12), S(11, 0),
}

var KingShelter = [2][8][8]Score{
	{{S(-25, 11), S(9, -13), S(16, 0), S(21, 4),
		S(26, -14), S(18, -6), S(15, -40), S(-89, 41)},
		{S(19, 7), S(23, -6), S(-6, 10), S(-8, 8),
			S(2, -1), S(23, 2), S(40, -17), S(-43, 23)},
		{S(16, 3), S(4, -1), S(-25, -1), S(-21, -2),
			S(-2, -17), S(2, 2), S(19, -8), S(-29, 0)},
		{S(-14, 16), S(9, -3), S(-5, -10), S(-3, -9),
			S(4, -24), S(0, -8), S(16, 21), S(-14, -2)},
		{S(-31, 20), S(-13, 8), S(-30, 8), S(-22, 8),
			S(1, -8), S(-20, 1), S(12, -3), S(-23, 2)},
		{S(38, -17), S(23, -14), S(5, -12), S(3, -23),
			S(11, -29), S(24, -19), S(30, -18), S(-10, -3)},
		{S(17, -2), S(-5, -8), S(-27, 3), S(-19, 3),
			S(-6, -17), S(9, -4), S(15, -16), S(-25, 20)},
		{S(-41, 11), S(-26, -2), S(-20, 26), S(-21, 23),
			S(-21, 14), S(-12, 11), S(-13, -15), S(-69, 50)}},
	{{S(34, 56), S(-36, -13), S(-26, 4), S(-30, -7),
		S(-40, -15), S(-6, 5), S(-41, -17), S(-87, 40)},
		{S(137, 17), S(7, -5), S(-6, 6), S(-24, 18),
			S(-7, -11), S(11, 3), S(13, -1), S(-77, 28)},
		{S(-4, 34), S(33, 4), S(11, 0), S(17, -6),
			S(24, -5), S(12, 5), S(36, 6), S(-22, 7)},
		{S(5, 34), S(-11, 21), S(-13, 14), S(-21, 22),
			S(-3, 10), S(-5, 4), S(-4, 11), S(-39, -3)},
		{S(4, 22), S(-3, 9), S(-7, 3), S(-11, -2),
			S(-4, -1), S(0, -9), S(12, 1), S(-28, -4)},
		{S(17, 20), S(-4, 8), S(-16, 10), S(-13, 8),
			S(-4, 1), S(-35, 13), S(-6, 3), S(-36, 9)},
		{S(30, 5), S(-4, -15), S(-9, -13), S(-28, -8),
			S(-12, -17), S(0, -16), S(2, -18), S(-69, 21)},
		{S(-27, -3), S(-14, -33), S(-9, -19), S(-4, -24),
			S(-4, -37), S(-1, -24), S(-4, -50), S(-64, 29)}},
}

var KingStorm = [2][4][8]Score{
	{{S(11, 8), S(2, 15), S(8, 7), S(5, 8),
		S(4, 5), S(11, 1), S(7, 11), S(-10, -7)},
		{S(25, 0), S(16, 6), S(19, 3), S(6, 10),
			S(19, 2), S(27, -8), S(19, -6), S(-6, -5)},
		{S(24, 10), S(5, 7), S(5, 11), S(-1, 11),
			S(2, 9), S(10, 4), S(8, -5), S(-3, 5)},
		{S(9, 2), S(7, -2), S(11, -10), S(0, -13),
			S(-3, -7), S(16, -14), S(9, -12), S(-11, 4)}},
	{{S(0, 0), S(3, 2), S(-12, 6), S(12, -8),
		S(-1, 20), S(-11, 31), S(4, 52), S(-7, -6)},
		{S(0, 0), S(-53, -11), S(8, -7), S(44, -7),
			S(6, -2), S(-9, -6), S(11, 52), S(-6, -2)},
		{S(0, 0), S(-20, -13), S(-4, -7), S(13, -1),
			S(4, -5), S(-11, -17), S(28, -39), S(-6, 5)},
		{S(0, 0), S(-19, -29), S(-12, -26), S(-6, -11),
			S(2, -25), S(1, -54), S(5, -2), S(-12, -5)}},
}
var KingOnPawnlessFlank = S(-22, -70)

var Hanging = S(27, 11)
var ThreatByKing = S(-6, 36)
var ThreatByMinor = [King + 1]Score{S(0, 0), S(18, 40), S(16, 39), S(31, 31), S(30, 30), S(2, 29)}
var ThreatByRook = [King + 1]Score{S(0, 0), S(-3, 12), S(-1, 17), S(-4, -10), S(33, 10), S(14, 10)}

// This weights are from black piece on black square perspective
var RookBishopExistence = [16]Score{
	S(10, -4), S(0, -7), S(1, -7), S(0, -2), S(-2, -5), S(-7, 37), S(-3, -1), S(-7, 20), S(1, -6), S(-4, -2), S(-7, 37), S(-7, 21), S(-6, -18), S(-3, 18), S(-1, 18), S(-19, 56),
}
var QueenBishopExistence = [16]Score{
	S(79, -42), S(-4, -8), S(-3, -22), S(-29, -13), S(-4, -5), S(10, 77), S(-21, 0), S(-4, -4), S(-1, 0), S(-17, 24), S(12, 73), S(0, 5), S(-38, -11), S(-8, 38), S(-12, 31), S(-21, 33),
}
var KingBishopExistence = [16]Score{
	S(0, 0), S(-6, 9), S(-5, 10), S(-23, -4), S(4, -14), S(-2, -6), S(-1, -3), S(-2, 7), S(7, -6), S(1, 3), S(2, 6), S(0, 14), S(23, 4), S(3, -13), S(4, -10), S(0, 0),
}

//
// King safety
//

var KingSafetyAttacksWeights = [Queen + 1]Score{S(0, 68), S(-1, -35), S(-6, 59), S(-1, -47), S(1, 68)}
var KingSafetyWeakSquares = S(42, 21)
var KingSafetyFriendlyPawns = S(-31, 0)
var KingSafetyNoEnemyQueens = S(-156, -177)
var KingSafetySafeQueenCheck = S(89, 102)
var KingSafetySafeRookCheck = S(77, 89)
var KingSafetySafeBishopCheck = S(47, 50)
var KingSafetySafeKnightCheck = S(114, 101)
var KingSafetyAdjustment = S(-21, -5)

// Attack value is special as it is scaled by a fraction
var KingSafetyAttackValue = S(113, 138)

//
// Complexity
//

var ComplexityTotalPawns = S(0, 6)
var ComplexityPawnEndgame = S(0, 83)
var ComplexityPawnBothFlanks = S(0, 106)
var ComplexityInfiltration = S(0, 6)
var ComplexityAdjustment = S(0, -173)
